@model VendorInformationViewModel
@{
    var routeData = this.ViewContext.RouteData.Values;
    var id = Model.Id;
    var nextView = this.TempData["nextview"] != null ? this.TempData["nextview"].ToString() : "#vendor-information";
    var disabled = id == 0;
    this.ViewBag.Title = disabled ? "Vendor Registration" :  Model.Name ;
}
<style>
    .intl-tel-input {
        z-index: 20;
    }
    .select2-container {
        z-index: unset !important;
    }
    .spin-loader {
        margin-left: 45%;
        border: 16px solid #f3f3f3;
        border-radius: 50%;
        border-top: 16px solid #3498db;
        width: 80px;
        height: 80px;
        -webkit-animation: spin 2s linear infinite; /* Safari */
        animation: spin 2s linear infinite;
    }

    /* Safari */
    @@-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="box no-top-border">
            <div class="box-header with-border">

                <h3 class="box-title"><span><i class='fa fa-fw fa-building'></i> @this.ViewBag.Title</span></h3>
                <div class="pull-right top-buttons">
                    @this.Html.ButtonTop(new[] { new Button(Enums.ButtonType.ViewList, "/admin/vendor/index") })
                </div>


            </div>
            <div class="nav-tabs-custom">
                <input type="hidden" name="tabs" data-default="@nextView" value="@nextView" />
                <form class="hide">
                    @foreach (var key in routeData.Keys)
                    {
                        <input type="hidden" name="@key" value="@(routeData[key])" />
                    }
                </form>
                <ul class="nav nav-tabs">
                    <li class=""><a href="#vendor-information" data-toggle="tab" data-href="@Url.Action("Manage","Vendor", new {id = Model.Id })"> <span><i class="fa fa-fw fa-info-circle"></i> Information</span></a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#vendor-contact" class="tourpackage-night" data-toggle="tab" data-href="/admin/vendor/contacts?Id=@id"><span><i class="fa fa-fw fa-users"></i> Contacts</span></a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#vendor-contract" id="vendorContract" class="tourpackage-night" data-toggle="tab" data-href="/admin/vendor/contracts?Id=@id"><span><i class="fa fa-fw fa-certificate"></i> Contract Details</span></a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#vendor-bank" id="vendorBank" class="tourpackage-night" data-toggle="tab" data-href="/admin/vendor/BankDetails?Id=@id"><span><i class="fa fa-fw fa-bank"></i> Bank Details</span></a></li>
                 </ul>
                <div class="tab-content hotel-tabs">
                    <div class="tab-pane" id="vendor-information"></div>
                    <div class="tab-pane" id="vendor-contact"></div>
                    <div class="tab-pane" id="vendor-contract"></div>
                    <div class="tab-pane" id="vendor-bank"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="vendorModal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Modal Header</h4>
            </div>
            <div class="modal-body">
                <p>This is a large modal.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary float_left" id="btnModalSubmit">Save</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        function StartModalLoader() {
            $('#vendorModal .modal-body').html('<div class="spin-loader"></div>');
        }
        $(function () {
            $(document).on("click", "#btnModalSubmit", function (event) {
                debugger;
                var form = $(this).data('form-target');
                var data = $(form).serialize();
                //if (form == "#formVendorGroupManage") {
                //    data = data + '&phone_group=' + encodeURI(itiGroup.getNumber());
                //}
                if ($(form).valid()) {
                    $.post($(form).data('submit-url'), data, function (data) {
                        debugger;
                        if (data == "success") {
                            swal('', 'Successfully Inserted', 'success');
                        }
                        if (data == "failure") {
                            swal('', 'Insert Failed', 'error');
                        }
                        $('#vendorModal').modal('toggle');
                    })
                }
                else {
                    return false;
                }
            });
            $(document).on("click", '[data-toggle="tab"]', function (e) {
                e.preventDefault()
                if ($(this).closest('li').hasClass("disabled")) {
                    return false;
                }
                $(this).tab('show')
            });

            $(document).on("click", '#btnSubmit', function (event) {
                if ($('.nav-tabs > .active').length) {
                    var nextTab = $('.nav-tabs').hasClass('pull-right')
                        ? $('.nav-tabs > .active').prev('li').find('a').attr("href")
                        : $('.nav-tabs > .active').next('li').find('a').attr("href")
                    $(this).parents('form').find(':hidden[name="nextview"]').remove();
                    $(this).parents('form').append('<input name="nextview" type="hidden" value="' + nextTab + '" />');
                }
            });

            $(document).on('show.bs.tab', 'a[data-toggle="tab"][data-href]', function (e) {

                const url = $(this).data("href");
                const target = $(this).attr("href");
                const currentTab = $(this);
                const ul = $(this).parents('ul');
                const li = $(this).closest('li');
                if (url && url != '' && target.indexOf("#") != -1 && !li.hasClass("disabled")) {
                    $(target).html(overlayTemplate);
                    var data = {};
                    ul.next('.tab-content').find(".active").html('')
                    var form = ul.closest('div').children('form.hide');
                    if (form.length) { data = form.serialize(); }
                    $.ajax({
                        url: url,
                        data: data,
                        method: 'get',
                        dataType: 'html',
                        error: function (xhr, request, error) { },
                        success: function (html) {
                            $(target).html(html)
                            currentTab.tab('show');
                            history.pushState({}, "", $(currentTab).attr('href'));
                            //initPluggins();
                            if ($('.nav-tabs-custom .nav-tabs-custom > ul > li.active').length == 0) {
                                var $childTab = $('.nav-tabs-custom .nav-tabs-custom > input[name="tabs"]:hidden');
                                fnChangeTab($childTab, $childTab.val());
                            }

                            setTimeout(function () {
                                $("form").removeData("validator");
                                $("form").removeData("unobtrusiveValidation");
                                $.validator.unobtrusive.parse("form");
                                initPluggins();
                                $("#DealType").select2({
                                    maximumSelectionLength: 2
                                });
                            }, 2000);

                        },
                    });
                }
            });

            var $tab = $('.nav-tabs-custom > input[name="tabs"]:hidden');
            fnChangeTab($tab, $tab.val());
        });
    </script>
    <script>
        function fnChangeTab($tab, value) {
            if ($tab.length > 0 && $tab.val().length > 0) {
                const active = (value || "") === "" ? $tab.val() : value;
                const target = $('a[href="' + active + '"]');
                if (target) {
                    target.click();
                }
            }
        }

        function UpdateLabelForHotelOnly(_element) {
            var ischecked = _element.checked;

            if (ischecked) {

                $("#txtProgram").html("Program");

            }
            else {

                $("#txtProgram").html("Hotel");
            }

        }

    </script>
}

<style>
    td.dataTables_empty {
        line-height: 150px !important;
    }

    tr.th-small > th {
        font-size: 11px !important;
        text-align: center;
    }

    #bodyModalBlockDates.modal-body {
        min-height: 200px;
    }

    .select2-container {
        z-index: 500;
    }
</style>