@{  this.ViewBag.Title = "Create Hotelier";
    var ErrorMsg = TempData["ErrorMsg"];
    var routeData = this.ViewContext.RouteData.Values;
    var id = this.ViewBag.HotelId;
    var vendorId = this.ViewBag.VendorId;
    var disabled = id == 0 && vendorId == 0 ? true : false;
    var contactdisabled = vendorId == 0 ? true : false;
    var nextView = this.TempData["nextview"] != null ? this.TempData["nextview"].ToString() : "#information";
 }
@model HotelierInfoViewModel
<div class="row">
    <div class="col-md-12">
        <div class="box no-top-border">
            <div class="box-header with-border">
                <h3 class="box-title">@this.ViewBag.Title</h3>
                <div class="pull-right top-buttons">
                    @this.Html.ButtonTop(new[] { new Button(Enums.ButtonType.ViewList, "/admin/hotelier/list") })
                </div>
            </div>
            <div class="nav-tabs-custom">
                <input type="hidden" name="tabs" data-default="@nextView" value="@nextView" />
                <form class="hide">
                    @foreach (var key in routeData.Keys)
                    {
                        <input type="hidden" name="@key" value="@(routeData[key])" />
                    }
                </form>
                <ul class="nav nav-tabs">
                    <li class=""><a href="#information" data-toggle="tab" data-href="@Url.Action("Information","Hotelier", new {@id = id ,@vendorId = vendorId })"><i class="fa fa-fw fa-building"></i> Information</a></li>
                    <li class="@(contactdisabled?"disabled":"")"><a href="#vendor-contact"  data-toggle="tab" data-href="/admin/vendor/contacts?Id=@vendorId"><i class="fa fa-fw fa-users"></i> Contacts</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#rooms" id="vendorContract" data-toggle="tab" data-href="/admin/hotelier/Rooms?Id=@id"><i class="fa fa-fw fa-bed"></i> Rooms</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#promotions" id="hotelierPromotion" data-toggle="tab" data-href="/admin/hotelier/promotiongrid?hotelId=@id&vendorId=@vendorId"><i class="fa fa-fw fa-gift"></i> Promotions</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#cancellation"id="hotelierCancellation" data-toggle="tab" data-href="/admin/hotelier/CancellationPolicy?hotelId=@id&vendorId=@vendorId"><i class="fa fa-fw fa-ban"></i> Cancellation Policy</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#content" data-toggle="tab" data-href="/admin/Hotelier/Content?hotelId=@id&vendorId=@vendorId"><i class="fa fa-fw fa-file-text"></i> Content</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#images" data-toggle="tab" data-href="/admin/hotelier/images?hotelId=@id&vendorId=@vendorId"><i class="fa fa-fw fa-image"></i> Images</a></li>
                    <li class="@(disabled?"disabled":"")"><a href="#reviews" data-toggle="tab" data-href="/admin/hotelier/reviews?hotelId=@id&vendorId=@vendorId"><i class="fa fa-fw fa-comment-o"></i> Reviews</a></li>
                </ul>
                <div class="tab-content hotel-tabs">
                    <div class="tab-pane" id="information"></div>
                    <div class="tab-pane" id="vendor-contact"></div>
                    <div class="tab-pane" id="rooms"></div>
                    <div class="tab-pane" id="promotions"></div>
                    <div class="tab-pane" id="cancellation"></div>
                    <div class="tab-pane" id="content"></div>
                    <div class="tab-pane" id="images"></div>
                    <div class="tab-pane" id="reviews"></div>
                </div>
            </div>
         
        </div>
    </div>

</div>
@section scripts
    {
    <script>
        function addnewitemmaster() {
            $.ajax({ url: '/admin/Hotel/AddNewRow' }).success(function (response) {
                $('#itemmaster > tbody').append(response);
                $("form").removeData("validator");
                $("form").removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse("form");
                initPluggins();
            });
        }
        $(document).on("click", '[data-toggle="tab"]', function (e) {
            e.preventDefault()
            if ($(this).closest('li').hasClass("disabled")) {
                return false;
            }
            $(this).tab('show')
        });
        $(document).on("click", '#btnSubmit', function (event) {
            if ($('.nav-tabs > .active').length) {
                var nextTab = $('.nav-tabs').hasClass('pull-right')
                    ? $('.nav-tabs > .active').prev('li').find('a').attr("href")
                    : $('.nav-tabs > .active').next('li').find('a').attr("href")
                $(this).parents('form').find(':hidden[name="nextview"]').remove();
                $(this).parents('form').append('<input name="nextview" type="hidden" value="' + nextTab + '" />');
            }
        });

        $(document).on('show.bs.tab', 'a[data-toggle="tab"][data-href]', function (e) {

            const url = $(this).data("href");
            const target = $(this).attr("href");
            const currentTab = $(this);
            const ul = $(this).parents('ul');
            const li = $(this).closest('li');
            if (url && url != '' && target.indexOf("#") != -1 && !li.hasClass("disabled")) {
                $(target).html(overlayTemplate);
                var data = {};
                ul.next('.tab-content').find(".active").html('')
                var form = ul.closest('div').children('form.hide');
                if (form.length) { data = form.serialize(); }
                $.ajax({
                    url: url,
                    data: data,
                    method: 'get',
                    dataType: 'html',
                    error: function (xhr, request, error) { },
                    success: function (html) {
                        $(target).html(html)
                        currentTab.tab('show');
                        history.pushState({}, "", $(currentTab).attr('href'));
                        //initPluggins();
                        if ($('.nav-tabs-custom .nav-tabs-custom > ul > li.active').length == 0) {
                            var $childTab = $('.nav-tabs-custom .nav-tabs-custom > input[name="tabs"]:hidden');
                            fnChangeTab($childTab, $childTab.val());
                        }

                        setTimeout(function () {
                            $("form").removeData("validator");
                            $("form").removeData("unobtrusiveValidation");
                            $.validator.unobtrusive.parse("form");
                            initPluggins();
                            $("#DealType").select2({
                                maximumSelectionLength: 2
                            });
                        }, 2000);

                    },
                });
            }
        });

        var $tab = $('.nav-tabs-custom > input[name="tabs"]:hidden');
        fnChangeTab($tab, $tab.val());
       
        function fnChangeTab($tab, value) {
            if ($tab.length > 0 && $tab.val().length > 0) {
                const active = (value || "") === "" ? $tab.val() : value;
                const target = $('a[href="' + active + '"]');
                if (target) {
                    target.click();
                }
            }
        }

        $(document).on("click", '.delete-item-row', function () {
            if ($(this).parents('tr').parent('tbody').find('tr').length > 1) {
                var ROWID = $(this).parents('tr').attr('id')
                swal({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                }).then(function () {
                    $('#' + ROWID).remove();
                })
                return false;
            }
            else {
                ////alert("You want be able to delete at least remaining item !")
            }

        });

        $(function () {

            setTimeout(function () {
                $(".duplicate-Room").text('');
            },4000);

             
            $(document).off("change", ".hotelroomtypedes")
            $(document).on("change", ".hotelroomtypedes", function () {
                //$('.hotelroomtypedes').on('change', function () {

              
                var options = $(this).data('select2').data() || [];
                //var options = $(".hotelroomtypedes ").data('select2').data() || [];
                if (options.length > 0 && options[0] && options[0].hasOwnProperty("Description")) {
                    var description = options[0].Description;
                    $(this).parents('tr').eq(0).find('.roomtypedes').val(description !== null ? description : '');
                    //$(".roomtypedes").val(description !== null ? description : '');
                }
                else {
                    $(this).parents('tr').eq(0).find('.roomtypedes').val('');
                }
            })

            $(document).on("change", "#Areas,#CityId", function () {

                var value = $("#Name").val();
                if (value != "") {
                    $("#Name").removeData("previousValue");
                    $('form').validate().element('#Name');
                }
            })
        });
    </script>
}
