@model List<DealsCancellationPolicyViewModel>;

<form asp-antiforgery="true" id="formCancellationPolicy" action="@Url.Action("CancellationPolicies", "Deals")" method="post" enctype="multipart/form-data">
    <div class="col-sm-12 col-xs-12">
        <div class="form-group">
            <div class="tax-tabel-wrap">
                <div class="table-responsive">
                    <table id="tpimages" class="table table-standard table-bordered invoice-tabel-2">
                        <thead>
                            <tr>
                                <th>From Days</th>
                                <th>To Days</th>
                                <th style="width:200px;">Deduction Type</th>
                                <th>Deduction Charge</th>
                                <th><i class="fa fa-trash-o"></i></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (this.Model != null && this.Model.Count > 0)
                            {
                                @foreach (var file in Model)
                                {
                                    @this.Html.Partial("_AddCancellationPolicy", file)
                                }
                            }
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="6" style="text-align:right"><a href="javascript:void(0);" class="btn btn-primary add_button">+ Add Policy</a></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @this.Html.ButtonBottom(new[] { new Button(Enums.ButtonType.SaveandReload) })
    @*@this.Html.ButtonBottom(new[] { new Button(Enums.ButtonType.SaveandReload) })*@
</form>
<script>
$(document).on('click', '.add_button', function (e) {
    $.get('@Url.Action("AddCancellationPolicy", "Deals", new { @area="Admin"})', { 'PackageId': @this.ViewBag.PackageId }, function (result)
    {
        $("#formCancellationPolicy table tbody").append(result);
        initSelect2();
        BindValidation()
    });
});
    $(document).on('click', '.delete-item-row', function (e) {
        e.preventDefault();
        var row = $(this).closest('tr');
        $(row).find('.delete_row').val(true);
        $(row).hide();
    })
    function BindValidation() {
        var form = $('#formCancellationPolicy');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
    }
    $(document).on('submit', "#formCancellationPolicy", function (e) {
        e.preventDefault();
        var $form = $("#formCancellationPolicy");
        //$('#formPackagePromotionManage input[name="Id"]').val(0);
            if ($form.valid()) {
                showWaitProcess();
                var model = {}
                model = $form.serialize();
                var ErrorMsg = "";
                $(".text-blank").each(function () {
                    ErrorMsg += $(this).text();
                })
                if (ErrorMsg != "") {
                    hideWaitProcess();
                    return false;
                }
                else {
                    $.ajax({
                        url: '@Url.Action("CancellationPolicies", "Deals")',
                        type: "JOSN",
                        method: "POST",
                        data: model,
                        success: function (data) {
                            hideWaitProcess();
                            if (data == "success") {
                                location.reload()
                                //$(".replaceView").click();
                            }
                            else if (data == "update") {
                                swal('', 'Successfully Updated', 'success');
                                //$(".replaceView").click();
                            }
                            else
                            {
                                var errors = JSON.parse(data);
                                $.each(errors, function (i, obj) {
                                    var $span = $('span[data-valmsg-for="' + obj.key + '"]');
                                    $span.addClass("field-validation-error").html('<span for="' + obj.key + '" class="field-validation-error">' + obj.error + '</span>');
                                    $span.attr("data-valmsg-replace", "false");
                                })

                                 setTimeout(function () {
                                        $("[data-valmsg-replace]").each(function () {
                                            $(this).attr("data-valmsg-replace", "true");
                                        })
                                    }, 3000);
                                return false;
                            }
                        }
                    });
                }
            }
    })
</script>