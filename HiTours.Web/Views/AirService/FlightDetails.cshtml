@model AirSearchResult
@{
    var flightDetailTabs = new string[] {
       $"BasicDetails{Guid.NewGuid().ToString("N")}",
       $"FareBreakup{Guid.NewGuid().ToString("N")}",
       $"BaggageRule{Guid.NewGuid().ToString("N")}"
    };

    var flight = Model;
    //var segments = Model.Segments.FirstOrDefault();

}

<div class="flight_tab_detail skip-html" style="display:none;">
    <div class="flight_tab_detail_menu">
        <ul>
            <li class="active"><a data-toggle="pill" href="#@(flightDetailTabs[0])">Basic Details</a></li>
            <li><a data-toggle="pill" href="#@(flightDetailTabs[1])">Fare Breakup</a></li>
            <li><a data-toggle="pill" href="#@(flightDetailTabs[2])">Baggage Rules</a></li>
        </ul>
    </div>
    <div class="tab-content">
        <div id="@(flightDetailTabs[0])" class="tab-pane fade in active">
            @foreach (var segments in Model.Segments)
            {
                var originSegment = segments.FirstOrDefault();
                var destinationSegment = segments.LastOrDefault();
                <div class="flightProcess">
                    <div class="conect_flights">
                        <div class="segment_section">@(originSegment.Origin.Airport.CityName) - @(destinationSegment.Destination.Airport.CityName)</div>
                        <div class="traveldate">@originSegment.StopPointDepartureTime.ToString("dddd, dd MMMM yyyy")</div>
                    </div>
                    <div class="confirm_flight_section">
                        @for (int i = 0; i < segments.Length; i++)
                        {
                            var segment = segments[i];
                            var airline = segment.Airline;
                            var origin = segment.Origin;
                            var destination = segment.Destination;
                            DateTime.TryParse(origin.DepTime, out DateTime depTime);
                            DateTime.TryParse(destination.ArrTime, out DateTime arrTime);
                            TimeSpan duration = TimeSpan.FromMinutes(segment.Duration);

                            <div class="row">
                                <div class="col-sm-2">
                                    <div class="airline_name">
                                        <i class="airline_logo flightImagesNewdib flight-carrier-sprite go_@(airline.AirlineCode)"></i>
                                        <h5 class="no_margin review_airline_name" title="@(airline.AirlineName)">@airline.AirlineName</h5>
                                        <div class="classtype_airline_code">
                                            @if (flight.FlightCabinClass > 0 && ((FlightCabinClass)flight.FlightCabinClass) != FlightCabinClass.All)
                                            {
                                                <span>@(((FlightCabinClass)flight.FlightCabinClass).ToString()) </span><span> | </span>

                                             }
                                            <span>
                                                @(airline.AirlineCode + airline.FlightNumber)
                                            </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-10">
                                        <div class="row">
                                            <div class="col-xs-5 col-sm-5 padingLR">
                                                <div class="text_align_right">
                                                    <h3 class="ul_big_high_text">
                                                        @(depTime.ToString("HH:mm"))
                                                        <span class="light_text">@origin.Airport.AirportCode</span>
                                                        <span class="jrny_date">@(depTime.ToString("MMM dd yyyy, dddd"))</span>
                                                    </h3><span class="ul_samll_light_text">@($"{origin.Airport.CityName}, {origin.Airport.AirportName}")</span>
                                                    <span class="ul_samll_light_text">TERMINAL @(origin.Airport.Terminal)</span>
                                                </div>
                                            </div>

                                            <div class="col-xs-2 col-sm-2 padingLR">
                                                <div class="text_align_center arrow_destination">
                                                    <span class="time_text_center"><i class="fa fa-long-arrow-right" aria-hidden="true"></i></span>
                                                    <span class="ul_samll_light_text1 ">@($"{duration.ToString("hh")}h {duration.ToString("mm")}m")</span>
                                                </div>
                                            </div>

                                            <div class="col-xs-5 col-sm-5 padingLR">
                                                <div class="text_align_left">
                                                    <h3 class="ul_big_high_text">
                                                        @(arrTime.ToString("HH:mm"))
                                                        <span class="light_text">@destination.Airport.AirportCode</span>
                                                        <span class="jrny_date">@(arrTime.ToString("MMM dd yyyy, dddd"))</span>
                                                    </h3>
                                                    <span class="ul_samll_light_text">@($"{destination.Airport.CityName}, {destination.Airport.AirportName}")</span>
                                                    <span class="ul_samll_light_text">TERMINAL @(destination.Airport.Terminal)</span>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                                <div class="clear_fix_both"></div>
                                @if ((i + 1) < segments.Length)
                                {
                                    <div class="layover_section_wrapper">
                                        <div class="layover_section_divider">
                                            <div class="float_left">
                                                @{var conntectingTime = Convert.ToDateTime(segments[i + 1].Origin.DepTime) - Convert.ToDateTime(segment.Destination.ArrTime);}
                                                @($"Connecting Flight at {segments[i + 1].Origin.Airport.CityName}  |  Connecting time: {conntectingTime.ToString("hh")}h {conntectingTime.ToString("mm")}m")
                                            </div>
                                        </div>
                                    </div>
                                                    }
                                                    }
                                        </div>
                                    </div>
                                    }


                                </div>
                                <div id="@(flightDetailTabs[1])" class="tab-pane fade">
                                    <div class="fare_breakup">
                                        <div class="width_100 float_left">
                                            <ul class="with_bottom_line">
                                                @foreach (var fareBreakdown in flight.FareBreakdown)
                                            {
                                                    <li>
                                                        <span class="float_left">@($"{(PaxType)fareBreakdown.PassengerType} Basefare (*{fareBreakdown.PassengerCount})")</span>
                                                        <span class="float_right"><span class=""> ₹ @((fareBreakdown.BaseFare * fareBreakdown.PassengerCount).ToAmount())</span></span><br>
                                                    </li>
                                                }
                                            </ul>
                                            <ul>
                                                <li>
                                                    <span class="float_left">
                                                        <strong>Base fare total</strong>
                                                    </span>
                                                    <span class="float_right">
                                                        <strong>
                                                            <span class=""> ₹ @flight.TotalBaseFareAmount.ToAmount()</span>
                                                        </strong>
                                                    </span>
                                                </li>
                                            </ul>
                                            <br>
                                            <ul class="with_bottom_line margin_top_5">
                                                @foreach (var fareBreakdown in flight.FareBreakdown)
                                            {
                                                    <li class="clear_fix_both">
                                                        <span class="float_left">@($"{(PaxType)fareBreakdown.PassengerType} Taxes (*{fareBreakdown.PassengerCount})"))</span>
                                                        <span class="float_right">
                                                            <span class=""> ₹ @((fareBreakdown.Tax + fareBreakdown.YQTax).ToAmount())</span>
                                                        </span>
                                                        <br>
                                                    </li>
                                                }

                                            </ul>
                                            <ul>
                                                <li>
                                                    <span class="float_left grand_total_text"><strong>Total Fare</strong></span>
                                                    <span class="float_right grand_total_text">
                                                        <strong>
                                                            <span class=""> ₹ @(flight.TotalAmount.ToAmount())</span>
                                                        </strong>
                                                    </span>
                                                </li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                                <div id="@(flightDetailTabs[2])" class="tab-pane fade">
                                    <div class="width_100 options_details fullWidth float_left">
                                        @foreach (var segments in Model.Segments)
                                        {
                                            foreach (var segment in segments)
                                            {
                                                <div class="width_50 inline_block">
                                                    <h3 class="list_heading">@($"{segment.Origin.Airport.CityName} - {segment.Destination.Airport.CityName}")</h3>
                                                    <ul>
                                                        <li>@($"Check-in: {segment.Baggage} / person")</li>
                                                        <li>@($"Cabin: {segment.CabinBaggage} / person")</li>
                                                    </ul>
                                                </div>
                                            }

                                        }
                                    </div>
                                </div>
                            </div>
                        </div>