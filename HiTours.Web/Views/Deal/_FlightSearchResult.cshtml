@model AirSearchResponse
@{
    int thisBaggage = 0;

    @if (Model.Response.Results.GetLength(0) == 0)
    {
        return;
    }
    @if (!this.ViewBag.IsMobileView)
    {
        @if (Model.Response.Results.GetLength(0) == 2)
        {
            bool recordfound = false;
            var countBox = 5;
            int j = 0;
            var num1 = Model.Response.Results[0].GetLength(0);
            var num2 = Model.Response.Results[1].GetLength(0);
            var num = num1 > num2 ? num2 : num1;

            TimeSpan start = new TimeSpan(), end = new TimeSpan(), now = new TimeSpan();
            if (ViewBag.minhour != null && ViewBag.maxhour != null)
            {
                start = new TimeSpan(ViewBag.minhour, 0, 0);
                end = new TimeSpan(ViewBag.maxhour, 0, 0);
            }

            TimeSpan returnstart = new TimeSpan(), returnend = new TimeSpan(), returnnow = new TimeSpan();
            if (ViewBag.returnminhour != null && ViewBag.returnmaxhour != null)
            {
                returnstart = new TimeSpan(ViewBag.returnminhour, 0, 0);
                returnend = new TimeSpan(ViewBag.returnmaxhour, 0, 0);
            }

            for (int i = 0; i < num1; i++)
            {
                for (int z = 0; z < num2; z++)
                {
                    string format = "yyyy-MM-dd HH:mm:ss";

                    AirResultSegments[] returnSegments = Model.Response.Results[1][z].Segments[0];
                    AirResultSegments[] onwardsSegments = Model.Response.Results[0][i].Segments[0];
                    if ((ViewBag.airline == null || (ViewBag.airline != null && Convert.ToString(ViewBag.airline).Contains(returnSegments[0].Airline.AirlineCode)) || (ViewBag.airline != null && Convert.ToString(ViewBag.airline).Contains(onwardsSegments[0].Airline.AirlineCode))) && (this.ViewBag.stopover == null || ((ViewBag.stopover != null && Convert.ToString(ViewBag.stopover).Contains(Convert.ToString(returnSegments.Length - 1)))) || ((ViewBag.stopover != null && Convert.ToString(ViewBag.stopover).Contains(Convert.ToString(onwardsSegments.Length - 1))))))
                    {
                        if (ViewBag.refundable == null || (ViewBag.refundable != null && (Model.Response.Results[0][i].IsRefundable || Model.Response.Results[1][z].IsRefundable)))
                        {
                            decimal amt = Model.Response.Results[0][i].Fare.PublishedFare + Model.Response.Results[1][z].Fare.PublishedFare;
                            decimal perPersonAmount = amt / Model.Response.TotalPassengers;
                            if ((ViewBag.minprice == null && ViewBag.maxprice == null) || (ViewBag.minprice != null && ViewBag.maxprice != null && perPersonAmount >= Convert.ToInt32(ViewBag.minprice) && perPersonAmount <= Convert.ToInt32(ViewBag.maxprice)))
                            {
                                CultureInfo hindi = new CultureInfo("hi-IN");
                                string text = string.Format(hindi, "{0:N0}", perPersonAmount);

                                recordfound = true;
                                var stop2 = returnSegments.Length;
                                var stop1 = onwardsSegments.Length;
                                DateTime OriginDT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                DateTime DestAT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][stop1 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                string OriginDTstr1 = OriginDT1.ToString("h:mm tt");
                                string DestATstr2 = DestAT2.ToString("h:mm tt");
                                var totalFare = Model.Response.Results[0][i].Fare.PublishedFare + Model.Response.Results[1][z].Fare.PublishedFare;
                                Guid identifier = Guid.NewGuid();
                                DateTime ds1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);

                                var resulttime = OriginDT1.ToString("h:mm").Split(":");
                                int hours = Convert.ToString(OriginDTstr1.Split(' ')[1]) == "PM" ? Convert.ToInt32(resulttime[0]) + 12 : Convert.ToInt32(resulttime[0]);
                                now = new TimeSpan(hours, Convert.ToInt32(resulttime[1]), 0);

                                DateTime returnOrigin = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                var returnresulttime = returnOrigin.ToString("h:mm").Split(":");
                                int returnhours = Convert.ToString(returnOrigin.ToString("h:mm tt").Split(' ')[1]) == "PM" ? Convert.ToInt32(returnresulttime[0]) + 12 : Convert.ToInt32(returnresulttime[0]);
                                returnnow = new TimeSpan(returnhours, Convert.ToInt32(returnresulttime[1]), 0);

                                if ((ViewBag.minhour == null && ViewBag.maxhour == null) || (now >= start) && (now <= end))
                                {
                                    if ((ViewBag.returnminhour == null && ViewBag.returnmaxhour == null) || (returnnow >= returnstart) && (returnnow <= returnend))
                                    {
                                        <div class="flight-result-single boxes_@i @(i >= countBox ? "hidden" : string.Empty)"
                                             data-refundable="@Model.Response.Results[0][i].IsRefundable"
                                             data-stopover="@(stop2 - 1),@(stop1 - 1)"
                                             data-price="@(totalFare / Model.Response.TotalPassengers)"
                                             data-hour="@ds1.Hour"
                                             data-minute="@ds1.Minute"
                                             data-flights="@string.Join(',', Model.Response.Results[0][i].Segments.SelectMany(x => x.Select(y => y.Airline.AirlineCode)).Distinct().ToList())">
                                            @if (i < countBox) { j++; }
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 flight-options-container">
                                                <div class="select-flight-options">
                                                    <div class="flight-results row">
                                                        <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 no-padding-left-right">
                                                            @{
                                                                AirResultSegments[] onwardflight = Model.Response.Results[0][i].Segments[0];
                                                                var onwardflightImage = onwardflight[0].Airline.AirlineCode + ".png";
                                                                AirResultSegments[] returnflight = Model.Response.Results[1][z].Segments[0];
                                                                var returnflightImage = returnflight[0].Airline.AirlineCode + ".png";
                                                            }
                                                            <div class="img-div"><img src="~/images/Airline/@onwardflightImage" alt="Flight Emblem" class="flight-img"></div>
                                                            <div class="img-div"><img src="~/images/Airline/@returnflightImage" alt="Flight Emblem" class="flight-img"></div>
                                                        </div>

                                                        <div class="col-xs-10 col-sm-7 col-md-7 col-lg-7 mobile-left-right-padding">
                                                            <div id="" class="hidden display1 result_view_@identifier" hidden">
                                                                <div class="journey-details f-border">
                                                                    <span>
                                                                        Onward Journey
                                                                        <span class="separator"></span>
                                                                        @ds1.ToString("dd MMMM, yyyy")
                                                                    </span>
                                                                </div>
                                                                <div class="journey-details">
                                                                    <span>
                                                                        Return Journey<span class="separator"></span>
                                                                        @{
                                                                            DateTime ds2 = DateTime.ParseExact(Model.Response.Results[1][0].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                                        }
                                                                        @ds2.ToString("dd MMMM, yyyy")
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            <div id="" class="display2 show_@identifier">
                                                                <div class="col-xs-8 col-sm-6 col-md-6 col-lg-6 no-padding-left-right">
                                                                    <div class="f-border">
                                                                        <div class="f-time">
                                                                            <span>

                                                                                @OriginDTstr1 - @DestATstr2
                                                                            </span>
                                                                            @if (OriginDT1.Date != DestAT2.Date)
                                                                            {
                                                                                <sup>+1</sup>
                                                                            }
                                                                        </div>
                                                                        <div class="f-t-details">
                                                                            @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName
                                                                        </div>
                                                                    </div>
                                                                    <div class="f-border-mobile">
                                                                        <div class="f-time">
                                                                            <span>
                                                                                @{
                                                                                    var RetOriginDT1 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                                                    var RetDestAT2 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][stop2 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                }
                                                                                @RetOriginDT1.ToString("h:mm tt") - @RetDestAT2.ToString("h:mm tt")
                                                                            </span>
                                                                            @if (RetOriginDT1.Date != RetDestAT2.Date)
                                                                            {
                                                                                <sup>+1</sup>
                                                                            }
                                                                        </div>
                                                                        <div class="f-t-details">
                                                                            @try
                                                                            {
                                                                                <span>@Model.Response.Results[1][z].Segments[0][0].Airline.AirlineName</span>
                                                                            }
                                                                            catch (Exception ex)
                                                                            { var msg = ex.ToString(); }
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="col-xs-4 col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                                                    <div class="f-border">
                                                                        <div class="f-time">
                                                                            <span>
                                                                                @{
                                                                                    TimeSpan interval1 = DestAT2.Subtract(OriginDT1);
                                                                                    //var int1 = interval1.ToString("h'h 'mm'm'");
                                                                                    string int1 = string.Empty;
                                                                                    TimeSpan interval2 = RetDestAT2.Subtract(RetOriginDT1);
                                                                                    //var int2 = interval2.ToString("h'h 'mm'm'");
                                                                                    string int2 = string.Empty;


                                                                                    if (interval1.Days != 0)
                                                                                    {
                                                                                        int1 = interval1.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (interval1.Hours != 0)
                                                                                    {
                                                                                        int1 = int1 + (interval1.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (interval1.Minutes != 0)
                                                                                    {
                                                                                        int1 = int1 + (interval1.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                    if (interval2.Days != 0)
                                                                                    {
                                                                                        int2 = interval2.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (interval2.Hours != 0)
                                                                                    {
                                                                                        int2 = int2 + (interval2.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (interval2.Minutes != 0)
                                                                                    {
                                                                                        int2 = int2 + (interval2.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                }
                                                                                @int1
                                                                            </span>
                                                                        </div>
                                                                        <div class="f-t-details">
                                                                            @for (int a = 0; a < stop1 - 1; ++a)
                                                                            {
                                                                                <span> @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[0][i].Segments[0][a + 1].Destination.Airport.AirportCode</span>
                                                                            }
                                                                            @if (stop1 == 1)
                                                                            {<span> @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportCode</span>
                                                                        }
                                                                        </div>
                                                                    </div>
                                                                    <div>
                                                                        <div class="f-time">@int2</div>
                                                                        <div class="f-t-details">
                                                                            @for (int a = 0; a < stop2 - 1; ++a)
                                                                            {<span> @Model.Response.Results[1][z].Segments[0][a].Origin.Airport.AirportCode - @Model.Response.Results[1][z].Segments[0][a + 1].Destination.Airport.AirportCode</span>
                                                                        }
                                                                            @if (stop2 == 1)
                                                                            {<span> @Model.Response.Results[1][z].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[1][z].Segments[0][0].Destination.Airport.AirportCode</span>
                                                                        }
                                                                        </div>
                                                                        <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @int1" />
                                                                        <input type="hidden" class="flight-detail-time-return" value="@Model.Response.Destination - @Model.Response.Origin  @int2" />
                                                                    </div>
                                                                </div>
                                                                <div class="hidden-xs col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                                                    <div class="f-border f-stop">
                                                                        @{
                                                                            var stp = stop1 - 1;
                                                                            @if (stp == 0)
                                                                            {
                                                                                <span>Non-Stop</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>@stp Stop </span>
                                                                            }
                                                                        }
                                                                        <div class="f-t-details">
                                                                            @{

                                                                                DateTime DestAT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                if (stp > 0)
                                                                                {
                                                                                    string Acode = string.Empty;

                                                                                    TimeSpan totalStopOverTimeOnwards = TimeSpan.Zero;

                                                                                    for (int s = 0; s < onwardsSegments.Length - 1; s++)
                                                                                    {
                                                                                        Acode = s == 0 ? onwardsSegments[s].Destination.Airport.AirportCode : Acode + ", " + onwardsSegments[s].Destination.Airport.AirportCode;
                                                                                        totalStopOverTimeOnwards = totalStopOverTimeOnwards + DateTime.ParseExact(onwardsSegments[s + 1].Origin.DepTime.Replace("T", " "), format, null).Subtract(DateTime.ParseExact(onwardsSegments[s].Destination.ArrTime.Replace("T", " "), format, null));
                                                                                    }
                                                                                    DateTime OriginDT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                                                    var d1 = string.Empty;
                                                                                    if (totalStopOverTimeOnwards.Days != 0)
                                                                                    {
                                                                                        d1 = totalStopOverTimeOnwards.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (totalStopOverTimeOnwards.Hours != 0)
                                                                                    {
                                                                                        d1 = d1 + (totalStopOverTimeOnwards.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (totalStopOverTimeOnwards.Minutes != 0)
                                                                                    {
                                                                                        d1 = d1 + (totalStopOverTimeOnwards.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                    <span>@d1 @Acode</span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>-</span>
                                                                                }
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                    <div class="f-ret-stop">
                                                                        @{
                                                                            var stp2 = stop2 - 1;
                                                                            @if (stp2 == 0)
                                                                            {
                                                                                <span>Non-Stop</span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>@stp2 Stop </span>
                                                                            }
                                                                        }

                                                                        <div class="f-t-details">
                                                                            @{

                                                                                DateTime RetDestAT1 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][0].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                if (stp2 > 0)
                                                                                {
                                                                                    string Bcode = string.Empty;
                                                                                    TimeSpan totalStopOverTimeReturn = TimeSpan.Zero;
                                                                                    for (int s = 0; s < returnSegments.Length - 1; s++)
                                                                                    {
                                                                                        Bcode = s == 0 ? returnSegments[s].Destination.Airport.AirportCode : Bcode + ", " + returnSegments[s].Destination.Airport.AirportCode;
                                                                                        totalStopOverTimeReturn = totalStopOverTimeReturn + DateTime.ParseExact(returnSegments[s + 1].Origin.DepTime.Replace("T", " "), format, null).Subtract(DateTime.ParseExact(returnSegments[s].Destination.ArrTime.Replace("T", " "), format, null));
                                                                                    }
                                                                                    DateTime RetOriginDT2 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);

                                                                                    var d2 = string.Empty;
                                                                                    if (totalStopOverTimeReturn.Days != 0)
                                                                                    {
                                                                                        d2 = totalStopOverTimeReturn.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (totalStopOverTimeReturn.Hours != 0)
                                                                                    {
                                                                                        d2 = d2 + (totalStopOverTimeReturn.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (totalStopOverTimeReturn.Minutes != 0)
                                                                                    {
                                                                                        d2 = d2 + (totalStopOverTimeReturn.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                    <span>@d2 @Bcode</span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>-</span>
                                                                                }
                                                                            }
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2 col-md-2 col-lg-2 journey-amount no-left-padd">
                                                            <div id="" class="hidden display1 result_view_@identifier">
                                                                @*@{
                                                                        decimal amt = Model.Response.Results[0][i].Fare.PublishedFare + Model.Response.Results[1][z].Fare.PublishedFare;

                                                                        decimal perPersonAmount = amt / Model.Response.TotalPassengers;
                                                                        CultureInfo hindi = new CultureInfo("hi-IN");
                                                                        string text = string.Format(hindi, "{0:N0}", perPersonAmount);
                                                                    }*@
                                                                <div class="amt"><span>₹</span>@text </div> <div class="per-person">per person</div>
                                                            </div>
                                                            <div id="" class="display2 show_@identifier">
                                                                <div class="t-info"><span>₹</span>@text</div><div class="per-person">per person</div><br><br>
                                                                @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                {<div class="t-detail t-info">REFUNDABLE </div>}
                                                                else
                                                                { <div class="t-detail t-info">NON-REFUNDABLE </div>}
                                                                <div class="t-detail t-info">
                                                                    @{
                                                                        thisBaggage = 0;
                                                                    }
                                                                    @if (string.IsNullOrEmpty(Model.Response.Results[0][i].Segments[0][0].Baggage) || int.TryParse(Model.Response.Results[0][i].Segments[0][0].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                    {
                                                                        if (thisBaggage == 0)
                                                                        {
                                                                            @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>
                                                                                @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                                CHECK - IN BAGGAGE
                                                                            </span>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>
                                                                            @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                            CHECK - IN BAGGAGE
                                                                        </span>
                                                                    }
                                                                </div>
                                                                @*<div class="t-detail t-info"> MEALS INCLUDED</div>*@
                                                            </div>
                                                        </div>
                                                        <div class="col-xs-6 col-sm-2 col-md-2 col-lg-2 sel-btn">
                                                            <button type="button"
                                                                    data-length="2"
                                                                    data-flightindex="@Model.Response.Results[0][i].ResultIndex,@Model.Response.Results[1][z].ResultIndex"
                                                                    data-lcc="@Model.Response.Results[0][i].IsLCC,@Model.Response.Results[1][z].IsLCC"
                                                                    data-traceid="@Model.Response.TraceId"
                                                                    data-tokenid="@Model.Response.TokenId"
                                                                    data-origin="@onwardflight[0].Origin.Airport.AirportCode"
                                                                    data-destination="@returnflight[returnflight.Length - 1].Destination.Airport.AirportCode"
                                                                    data-price="@amt"
                                                                    class="select-flight-btn select-btn">
                                                                SELECT
                                                            </button>
                                                            <div id="" class="showless result_view_@identifier display1 hidden show-moreless" data-target=".show_@identifier" data-toggle-target=".result_view_@identifier">
                                                                <a>Show Less <img src="~/images/Chevron_Up.svg" alt="Chevron-Up"></a>
                                                            </div>
                                                            <div id="" class="showmore show_@identifier display2 show-moreless"
                                                                 data-rules-fetched="false"
                                                                 data-target-identifier="@identifier"
                                                                 data-length="2"
                                                                 data-flightindex="@Model.Response.Results[0][i].ResultIndex,@Model.Response.Results[1][z].ResultIndex"
                                                                 data-lcc="@Model.Response.Results[0][i].IsLCC,@Model.Response.Results[1][z].IsLCC"
                                                                 data-traceid="@Model.Response.TraceId"
                                                                 data-tokenid="@Model.Response.TokenId"
                                                                 data-target=".result_view_@identifier"
                                                                 data-toggle-target=".show_@identifier">
                                                                <a>Show More <img src="~/images/Chevron_Down.svg" alt="Chevron-Up"></a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div id="" class="display1 result_view_@identifier hidden result-details row">
                                                        <div>
                                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                            <div class="tab col-xs-11 col-sm-11 col-md-11 col-lg-11 result-header-top">
                                                                <button type="button" class="tabbutton result-header" onclick="openit(event, 'onward_@identifier',this)">ONWARD JOURNEY</button>
                                                                <button type="button" class="tabbutton result-header " onclick="openit(event, 'return_@identifier',this)">return JOURNEY</button>
                                                                <button type="button" class="tabbutton result-header " onclick="openit(event, 'baggage_@identifier',this)">baggage information</button>
                                                                <button type="button" class="tabbutton result-header " onclick="openit(event, 'cancel_@identifier',this)">cancellation policy</button>
                                                            </div>
                                                            <div id="onward_@identifier" class="tabcontent onwards">
                                                                <div class="result-info row">
                                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                    </div>
                                                                    <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                        <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                                            <div class="s-name">
                                                                                @OriginDT1.ToString("h:mm tt")
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode)
                                                                            </div>
                                                                            <div class="s-info">
                                                                                TRAVEL TIME:
                                                                                @{
                                                                                    TimeSpan it3 = DestAT1.Subtract(OriginDT1);
                                                                                    string it4 = string.Empty;
                                                                                    if (it3.Days != 0)
                                                                                    {
                                                                                        it4 = it3.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (it3.Hours != 0)
                                                                                    {
                                                                                        it4 = it4 + (it3.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (it3.Minutes != 0)
                                                                                    {
                                                                                        it4 = it4 + (it3.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                }
                                                                                @it4
                                                                            </div>
                                                                            <div class="s-name">
                                                                                @DestAT1.ToString("h:mm tt")
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportCode)
                                                                            </div>
                                                                            <div class="s-info">
                                                                                @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineCode
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[0][i].Segments[0][0].Airline.FlightNumber
                                                                            </div>
                                                                            <input type="hidden" class="flight-first-leg" value="@Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName - @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineCode - @Model.Response.Results[0][i].Segments[0][0].Airline.FlightNumber / Travel Time: @it4">
                                                                        </div>
                                                                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col  no-padding-left-right">
                                                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                            {<div class="s-details">REFUNDABLE</div>}
                                                                            else
                                                                            {<div class="s-details">NON-REFUNDABLE</div>}
                                                                            @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                            <div class="s-details">
                                                                                @{
                                                                                    thisBaggage = 0;
                                                                                }
                                                                                @if (string.IsNullOrEmpty(Model.Response.Results[0][i].Segments[0][0].Baggage) || int.TryParse(Model.Response.Results[0][i].Segments[0][0].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                {
                                                                                    if (thisBaggage == 0)
                                                                                    {
                                                                                        @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                                        CHECK - IN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                                @*@if (Model.Response.Results[0][i].Segments[0][0].Baggage == null)
                                                                                    {<span>0 CHECK - IN BAGGAGE</span>}
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }*@
                                                                            </div>
                                                                            <div class="s-details">
                                                                                @{
                                                                                    thisBaggage = 0;
                                                                                }
                                                                                @if (string.IsNullOrEmpty(Model.Response.Results[0][i].Segments[0][0].CabinBaggage) || int.TryParse(Model.Response.Results[0][i].Segments[0][0].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                {
                                                                                    if (thisBaggage == 0)
                                                                                    {
                                                                                        @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[0][i].Segments[0][0].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @Model.Response.Results[0][i].Segments[0][0].CabinBaggage
                                                                                        CABIN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                                @*@if (Model.Response.Results[0][i].Segments[0][0].CabinBaggage == null)
                                                                                    {<span>0 CABIN BAGGAGE</span>}
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[0][i].Segments[0][0].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }*@
                                                                            </div>
                                                                            @*<div class="s-details">ON-DEMAND VIDEO</div>*@
                                                                        </div>
                                                                    </div>
                                                                    @{
                                                                        for (int k = 0; k < stop1 - 1; ++k)
                                                                        {
                                                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding-left-right">
                                                                                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                                                <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                    <div class="s-middle">
                                                                                        @{
                                                                                            DateTime OriginDT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                                            DateTime nDestAT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                            DateTime nDestAT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                            TimeSpan it5 = OriginDT2.Subtract(nDestAT1);
                                                                                            string it6 = string.Empty;
                                                                                            if (it5.Days != 0)
                                                                                            {
                                                                                                it6 = it5.Days.ToString() + " Day ";
                                                                                            }
                                                                                            if (it5.Hours != 0)
                                                                                            {
                                                                                                it6 = it6 + (it5.Hours % 24).ToString() + " Hr ";
                                                                                            }
                                                                                            if (it5.Minutes != 0)
                                                                                            {
                                                                                                it6 = it6 + (it5.Minutes % 60).ToString() + " Min ";
                                                                                            }
                                                                                            TimeSpan it1 = nDestAT2.Subtract(OriginDT2);
                                                                                            string it2 = string.Empty;
                                                                                            if (it1.Days != 0)
                                                                                            {
                                                                                                it2 = it1.Days.ToString() + " Day ";
                                                                                            }
                                                                                            if (it1.Hours != 0)
                                                                                            {
                                                                                                it2 = it2 + (it1.Hours % 24).ToString() + " Hr ";
                                                                                            }
                                                                                            if (it1.Minutes != 0)
                                                                                            {
                                                                                                it2 = it2 + (it1.Minutes % 60).ToString() + " Min ";
                                                                                            }
                                                                                        }
                                                                                        @it6
                                                                                        STOPOVER
                                                                                        <span class="separator"></span>
                                                                                        <span class="text-uppercase">
                                                                                            @Model.Response.Results[0][i].Segments[0][k].Destination.Airport.CityName (@Model.Response.Results[0][i].Segments[0][k].Destination.Airport.AirportCode)
                                                                                        </span>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                            </div>
                                                                            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                                                    <div class="s-name">
                                                                                        @OriginDT2.ToString("h:mm tt")
                                                                                        @if (nDestAT1.Date != OriginDT2.Date)
                                                                                        {<span>(+1 Day)</span>}
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Origin.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][k + 1].Origin.Airport.AirportCode)
                                                                                    </div>
                                                                                    <div class="s-info">TRAVEL TIME: @it2</div>
                                                                                    <div class="s-name">
                                                                                        @nDestAT2.ToString("h:mm tt")
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Destination.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][k + 1].Destination.Airport.AirportCode)
                                                                                    </div>
                                                                                    <div class="s-info">
                                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineName
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineCode
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Airline.FlightNumber
                                                                                    </div>
                                                                                </div>
                                                                                <input type="hidden" class="stop-over-time" value="@it6 Stopover at @Model.Response.Results[0][i].Segments[0][k].Destination.Airport.CityName (@Model.Response.Results[0][i].Segments[0][k].Destination.Airport.AirportCode)" />
                                                                                <input type="hidden" class="stop-over-trip" value="@Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineName - @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineCode - @Model.Response.Results[0][i].Segments[0][k + 1].Airline.FlightNumber / Travel Time: @it2" />

                                                                                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col  no-padding-left-right">
                                                                                    @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                                    {<div class="s-details">REFUNDABLE</div>}
                                                                                    else
                                                                                    {
                                                                                        <div class="s-details">NON-REFUNDABLE</div>
                                                                                    }
                                                                                    <div class="s-details">MEALS INCLUDED</div>
                                                                                    <div class="s-details">
                                                                                        @{
                                                                                            thisBaggage = 0;
                                                                                        }
                                                                                        @if (string.IsNullOrEmpty(Model.Response.Results[0][i].Segments[0][k + 1].Baggage) || int.TryParse(Model.Response.Results[0][i].Segments[0][k + 1].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                        {
                                                                                            if (thisBaggage == 0)
                                                                                            {
                                                                                                @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[0][i].Segments[0][k + 1].Baggage
                                                                                                    CHECK - IN BAGGAGE
                                                                                                </span>
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                        @*@if (Model.Response.Results[0][i].Segments[0][k + 1].Baggage == null)
                                                                                            {<span>0 CHECK - IN BAGGAGE</span>}
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[0][i].Segments[0][k + 1].Baggage
                                                                                                    CHECK - IN BAGGAGE
                                                                                                </span>
                                                                                            }*@
                                                                                    </div>
                                                                                    <div class="s-details">
                                                                                        @{
                                                                                            thisBaggage = 0;
                                                                                        }
                                                                                        @if (string.IsNullOrEmpty(Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage) || int.TryParse(Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                        {
                                                                                            if (thisBaggage == 0)
                                                                                            {
                                                                                                @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage
                                                                                                    CABIN BAGGAGE
                                                                                                </span>
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage
                                                                                                CABIN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                        @*@if (Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage == null)
                                                                                            {<span>0 CABIN BAGGAGE</span>}
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage
                                                                                                    CABIN BAGGAGE
                                                                                                </span>
                                                                                            }*@
                                                                                    </div>
                                                                                    <div class="s-details"></div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                            <div id="return_@identifier" class="tabcontent return">
                                                                <div class="result-info row">
                                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                    </div>
                                                                    <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                        <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                                            <div class="s-name">
                                                                                @RetOriginDT1.ToString("h:mm tt")
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[1][z].Segments[0][0].Origin.Airport.AirportName (@Model.Response.Results[1][z].Segments[0][0].Origin.Airport.AirportCode)
                                                                            </div>
                                                                            <div class="s-info">
                                                                                TRAVEL TIME:
                                                                                @{
                                                                                    TimeSpan tt1 = RetDestAT1.Subtract(RetOriginDT1);
                                                                                    string returnTravelTimeStart = string.Empty;
                                                                                    if (tt1.Days != 0)
                                                                                    {
                                                                                        returnTravelTimeStart = tt1.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (tt1.Hours != 0)
                                                                                    {
                                                                                        returnTravelTimeStart = returnTravelTimeStart + (tt1.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (tt1.Minutes != 0)
                                                                                    {
                                                                                        returnTravelTimeStart = returnTravelTimeStart + (tt1.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                }
                                                                                @returnTravelTimeStart
                                                                            </div>
                                                                            <div class="s-name">
                                                                                @RetDestAT1.ToString("h:mm tt")
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[1][z].Segments[0][0].Destination.Airport.AirportName (@Model.Response.Results[1][z].Segments[0][0].Destination.Airport.AirportCode)
                                                                            </div>
                                                                            <div class="s-info">
                                                                                @Model.Response.Results[1][z].Segments[0][0].Airline.AirlineName
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[1][z].Segments[0][0].Airline.AirlineCode
                                                                                <span class="separator"></span>
                                                                                @Model.Response.Results[1][z].Segments[0][0].Airline.FlightNumber
                                                                            </div>
                                                                            <input type="hidden" class="flight-first-leg-return" value="@Model.Response.Results[1][z].Segments[0][0].Airline.AirlineName - @Model.Response.Results[1][z].Segments[0][0].Airline.AirlineCode - @Model.Response.Results[1][z].Segments[0][0].Airline.FlightNumber / Travel Time: @returnTravelTimeStart">
                                                                        </div>
                                                                        <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                                            @if (Model.Response.Results[1][z].IsRefundable == true)
                                                                            {<div class="s-details">REFUNDABLE</div>}
                                                                            else
                                                                            {<div class="s-details">NON-REFUNDABLE</div>}
                                                                            @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                            <div class="s-details">
                                                                                @{
                                                                                    thisBaggage = 0;
                                                                                }
                                                                                @if (string.IsNullOrEmpty(Model.Response.Results[1][z].Segments[0][0].Baggage) || int.TryParse(Model.Response.Results[1][z].Segments[0][0].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                {
                                                                                    if (thisBaggage == 0)
                                                                                    {
                                                                                        @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[1][z].Segments[0][0].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @Model.Response.Results[1][z].Segments[0][0].Baggage
                                                                                        CHECK - IN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                                @*@if (Model.Response.Results[1][z].Segments[0][0].Baggage == null)
                                                                                    {<span>0 CHECK - IN BAGGAGE</span>}
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[1][z].Segments[0][0].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }*@
                                                                            </div>
                                                                            <div class="s-details">
                                                                                @{
                                                                                    thisBaggage = 0;
                                                                                }
                                                                                @if (string.IsNullOrEmpty(Model.Response.Results[1][z].Segments[0][0].CabinBaggage) || int.TryParse(Model.Response.Results[1][z].Segments[0][0].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                {
                                                                                    if (thisBaggage == 0)
                                                                                    {
                                                                                        @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[1][z].Segments[0][0].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @Model.Response.Results[1][z].Segments[0][0].CabinBaggage
                                                                                        CABIN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                                @*@if (Model.Response.Results[1][z].Segments[0][0].CabinBaggage == null)
                                                                                    {<span>0 CABIN BAGGAGE</span>}
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @Model.Response.Results[1][z].Segments[0][0].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }*@
                                                                            </div>
                                                                            @*<div class="s-details">ON-DEMAND VIDEO</div>*@
                                                                        </div>
                                                                    </div>
                                                                    @{
                                                                        for (int l = 0; l < stop2 - 1; ++l)
                                                                        {
                                                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding-left-right">
                                                                                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                                                <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                    <div class="s-middle">
                                                                                        @{
                                                                                            DateTime RetOriginDT2 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][l + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                                            DateTime nRetDestAT1 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][l].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                            TimeSpan stopover = RetOriginDT2.Subtract(nRetDestAT1);
                                                                                            string stopOverTime = string.Empty;
                                                                                            if (stopover.Days != 0)
                                                                                            {
                                                                                                stopOverTime = stopover.Days.ToString() + " Day ";
                                                                                            }
                                                                                            if (stopover.Hours != 0)
                                                                                            {
                                                                                                stopOverTime = stopOverTime + (stopover.Hours % 24).ToString() + " Hr ";
                                                                                            }
                                                                                            if (stopover.Minutes != 0)
                                                                                            {
                                                                                                stopOverTime = stopOverTime + (stopover.Minutes % 60).ToString() + " Min ";
                                                                                            }
                                                                                            DateTime nRetDestAT2 = DateTime.ParseExact(Model.Response.Results[1][z].Segments[0][l + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                        }
                                                                                        @stopOverTime STOPOVER
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[1][z].Segments[0][l].Destination.Airport.CityName (@Model.Response.Results[1][z].Segments[0][l].Destination.Airport.AirportCode)
                                                                                    </div>
                                                                                </div>

                                                                            </div>
                                                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                            </div>
                                                                            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                                                    <div class="s-name">
                                                                                        @RetOriginDT2.ToString("h:mm tt")
                                                                                        @if (nRetDestAT1.Date != RetOriginDT2.Date)
                                                                                        {<span>(+1 Day)</span>}
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[1][z].Segments[0][l + 1].Origin.Airport.AirportName (@Model.Response.Results[1][z].Segments[0][l + 1].Origin.Airport.AirportCode)
                                                                                    </div>
                                                                                    <div class="s-info">
                                                                                        TRAVEL TIME:
                                                                                        @{
                                                                                            TimeSpan tt2 = nRetDestAT2.Subtract(RetOriginDT2);
                                                                                            string segementTravelTime = string.Empty;
                                                                                            if (tt2.Days != 0)
                                                                                            {
                                                                                                segementTravelTime = tt2.Days.ToString() + " Day ";
                                                                                            }
                                                                                            if (tt2.Hours != 0)
                                                                                            {
                                                                                                segementTravelTime = segementTravelTime + (tt2.Hours % 24).ToString() + " Hr ";
                                                                                            }
                                                                                            if (tt2.Minutes != 0)
                                                                                            {
                                                                                                segementTravelTime = segementTravelTime + (tt2.Minutes % 60).ToString() + " Min ";
                                                                                            }
                                                                                        }
                                                                                        @segementTravelTime
                                                                                    </div>
                                                                                    <div class="s-name">
                                                                                        @nRetDestAT2.ToString("h:mm tt")
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[1][z].Segments[0][l + 1].Destination.Airport.AirportName (@Model.Response.Results[1][z].Segments[0][l + 1].Destination.Airport.AirportCode)
                                                                                    </div>
                                                                                    <div class="s-info">
                                                                                        @Model.Response.Results[1][z].Segments[0][l + 1].Airline.AirlineName
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[1][z].Segments[0][l + 1].Airline.AirlineCode
                                                                                        <span class="separator"></span>
                                                                                        @Model.Response.Results[1][z].Segments[0][l + 1].Airline.FlightNumber
                                                                                    </div>
                                                                                    <input type="hidden" class="stop-over-time" value="@stopOverTime @Model.Response.Results[1][z].Segments[0][l].Destination.Airport.CityName (@Model.Response.Results[1][z].Segments[0][l].Destination.Airport.AirportCode)" />
                                                                                    <input type="hidden" class="stop-over-trip" value="@Model.Response.Results[1][z].Segments[0][l + 1].Airline.AirlineName - @Model.Response.Results[1][z].Segments[0][l + 1].Airline.AirlineCode - @Model.Response.Results[1][z].Segments[0][l + 1].Airline.FlightNumber / Travel Time: @segementTravelTime" />
                                                                                </div>
                                                                                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col  no-padding-left-right">
                                                                                    @if (Model.Response.Results[1][z].IsRefundable == true)
                                                                                    {<div class="s-details">REFUNDABLE</div>}
                                                                                    else
                                                                                    {
                                                                                        <div class="s-details">REFUNDABLE</div>
                                                                                    }
                                                                                    @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                                    <div class="s-details">
                                                                                        @{
                                                                                            thisBaggage = 0;
                                                                                        }
                                                                                        @if (string.IsNullOrEmpty(Model.Response.Results[1][z].Segments[0][l + 1].Baggage) || int.TryParse(Model.Response.Results[1][z].Segments[0][l + 1].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                        {
                                                                                            if (thisBaggage == 0)
                                                                                            {
                                                                                                @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[1][z].Segments[0][l + 1].Baggage
                                                                                                    CHECK - IN BAGGAGE
                                                                                                </span>
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @Model.Response.Results[1][z].Segments[0][l + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                        @*@if (Model.Response.Results[1][z].Segments[0][l + 1].Baggage == null)
                                                                                            {<span>0 CHECK - IN BAGGAGE</span>}
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[1][z].Segments[0][l + 1].Baggage
                                                                                                    CHECK - IN BAGGAGE
                                                                                                </span>
                                                                                            }*@
                                                                                    </div>
                                                                                    <div class="s-details">
                                                                                        @{
                                                                                            thisBaggage = 0;
                                                                                        }
                                                                                        @if (string.IsNullOrEmpty(Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage) || int.TryParse(Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                        {
                                                                                            if (thisBaggage == 0)
                                                                                            {
                                                                                                @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage
                                                                                                    CABIN BAGGAGE
                                                                                                </span>
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage
                                                                                                CABIN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                        @*@if (Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage == null)
                                                                                            {<span>0 CABIN BAGGAGE</span>}
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @Model.Response.Results[1][z].Segments[0][l + 1].CabinBaggage
                                                                                                    CABIN BAGGAGE
                                                                                                </span>
                                                                                            }*@
                                                                                    </div>
                                                                                    <div class="s-details"></div>
                                                                                </div>
                                                                            </div>

                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                            <div id="baggage_@identifier" class="tabcontent baggage">
                                                            </div>
                                                            <div id="cancel_@identifier" class="tabcontent">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-10">
                                            </div>
                                        </div>
                                    }
                                }
                            }
                        }
                    }
                }
            }
            @if (recordfound)
            {
                <div class="show-more-button-div">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-5"></div>
                    <div class="hidden-xs col-sm-4 col-md-4 col-lg-4"></div>
                    <div class="load_more_btn col-xs-4 col-sm-4 col-md-4 col-lg-4">
                        <button type="button" class="button_load" data-viewcount="@countBox" onclick="CallMe(@countBox,@num, this)">LOAD MORE FLIGHTS</button>
                    </div>
                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> </div>
                </div>
            }
            else
            {
                <div class="show-more-button-div">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-5"></div>
                    <div class="hidden-xs col-sm-4 col-md-4 col-lg-4"></div>
                    <div class="load_more_btn col-xs-4 col-sm-4 col-md-4 col-lg-4">
                        NO RECORD FOUND
                    </div>
                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> </div>
                </div>
            }
        }
        @if (Model.Response.Results.GetLength(0) == 1)
        {
            TimeSpan start = new TimeSpan(), end = new TimeSpan(), now = new TimeSpan();
            if (ViewBag.minhour != null && ViewBag.maxhour != null)
            {
                start = new TimeSpan(ViewBag.minhour, 0, 0);
                end = new TimeSpan(ViewBag.maxhour, 0, 0);
            }

            TimeSpan returnstart = new TimeSpan(), returnend = new TimeSpan(), returnnow = new TimeSpan();
            if (ViewBag.returnminhour != null && ViewBag.returnmaxhour != null)
            {
                returnstart = new TimeSpan(ViewBag.returnminhour, 0, 0);
                returnend = new TimeSpan(ViewBag.returnmaxhour, 0, 0);
            }

            var countBox = 5;
            var j = 0;
            var num = Model.Response.Results[0].GetLength(0);
            for (int i = 0; i < num; i++)
            {
                string format = "yyyy-MM-dd HH:mm:ss";
                var onwardflight = Model.Response.Results[0][i].Segments[0];
                var onwardflightImage = onwardflight[0].Airline.AirlineCode + ".png";
                var returnflight = Model.Response.Results[0][i].Segments[Model.Response.Results[0][i].Segments.Length - 1];
                var returnflightImage = returnflight[0].Airline.AirlineCode + ".png";
                var stop2 = onwardflight.Length;
                var stop1 = returnflight.Length;
                DateTime OriginDT1 = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null); // Origin Date Time
                DateTime DestAT2 = DateTime.ParseExact(onwardflight[stop2 - 1].Destination.ArrTime.Replace("T", " "), format, null); // Destination Date Time
                var OriginDTstr1 = OriginDT1.ToString("h:mm tt"); // Origin Time
                var DestATstr2 = DestAT2.ToString("h:mm tt"); //Destination Time
                var identifier = Guid.NewGuid();
                DateTime ds1 = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null); // Origin Date Time (Improvement Point: Use OriginDT1 instead)

                if ((ViewBag.airline == null || (ViewBag.airline != null && Convert.ToString(ViewBag.airline).Contains(returnflight[0].Airline.AirlineCode)) || (ViewBag.airline != null && Convert.ToString(ViewBag.airline).Contains(onwardflight[0].Airline.AirlineCode))) && (this.ViewBag.stopover == null || ((ViewBag.stopover != null && Convert.ToString(ViewBag.stopover).Contains(Convert.ToString(returnflight.Length - 1)))) || ((ViewBag.stopover != null && Convert.ToString(ViewBag.stopover).Contains(Convert.ToString(onwardflight.Length - 1))))))
                {
                    if (ViewBag.refundable == null || (ViewBag.refundable != null && Model.Response.Results[0][i].IsRefundable))
                    {
                        decimal amt = Model.Response.Results[0][i].Fare.PublishedFare;
                        decimal perPersonAmount = amt / Model.Response.TotalPassengers;
                        if ((ViewBag.minprice == null && ViewBag.maxprice == null) || (ViewBag.minprice != null && ViewBag.maxprice != null && perPersonAmount >= Convert.ToInt32(ViewBag.minprice) && perPersonAmount <= Convert.ToInt32(ViewBag.maxprice)))
                        {

                            var resulttime = OriginDT1.ToString("h:mm").Split(":");
                            int hours = Convert.ToString(OriginDTstr1.Split(' ')[1]) == "PM" ? Convert.ToInt32(resulttime[0]) + 12 : Convert.ToInt32(resulttime[0]);
                            now = new TimeSpan(hours, Convert.ToInt32(resulttime[1]), 0);

                            DateTime returnOrigin = DateTime.ParseExact(returnflight[0].Origin.DepTime.Replace("T", " "), format, null);
                            var returnresulttime = returnOrigin.ToString("h:mm").Split(":");
                            int returnhours = Convert.ToString(returnOrigin.ToString("h:mm tt").Split(' ')[1]) == "PM" ? Convert.ToInt32(returnresulttime[0]) + 12 : Convert.ToInt32(returnresulttime[0]);
                            returnnow = new TimeSpan(returnhours, Convert.ToInt32(returnresulttime[1]), 0);

                            if ((ViewBag.minhour == null && ViewBag.maxhour == null) || (now >= start) && (now <= end))
                            {
                                if ((ViewBag.returnminhour == null && ViewBag.returnmaxhour == null) || (returnnow >= returnstart) && (returnnow <= returnend))
                                {
                                    CultureInfo hindi = new CultureInfo("hi-IN");
                                    string text = string.Format(hindi, "{0:N0}", perPersonAmount);

                                    <div class="flight-result-single boxes_@i @(i >= countBox ? "hidden" : string.Empty)"
                                         data-refundable="@Model.Response.Results[0][i].IsRefundable"
                                         data-price="@(Model.Response.Results[0][i].Fare.PublishedFare / Model.Response.TotalPassengers)"
                                         data-hour="@ds1.Hour"
                                         data-minute="@ds1.Minute"
                                         data-stopover="@(stop2 - 1),@(stop1 - 1)"
                                         data-flights="@string.Join(',', Model.Response.Results[0][i].Segments.SelectMany(x => x.Select(y => y.Airline.AirlineCode)).Distinct().ToList())">
                                        @if (i < countBox) { j++; }
                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 flight-options-container">
                                            <div class="select-flight-options">
                                                <div class="flight-results row">
                                                    <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 no-padding-left-right">
                                                        <div class="img-div"><img src="~/images/Airline/@onwardflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                                        <div class="img-div"><img src="~/images/Airline/@returnflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                                    </div>
                                                    <div class="col-xs-10 col-sm-7 col-md-7 col-lg-7 mobile-left-right-padding">
                                                        <div id="" class="hidden display1 result_view_@identifier" hidden">
                                                            <div class="journey-details f-border">
                                                                <span>
                                                                    Onward Journey
                                                                    <span class="separator"></span>

                                                                    @ds1.ToString("dd MMMM, yyyy")
                                                                </span>
                                                            </div>
                                                            <div class="journey-details">
                                                                <span>
                                                                    Return Journey<span class="separator"></span>
                                                                    @{
                                                                        DateTime ds2 = DateTime.ParseExact(returnflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                                    }
                                                                    @ds2.ToString("dd MMMM, yyyy")
                                                                </span>
                                                            </div>
                                                        </div>
                                                        <div id="" class="display2 show_@identifier">
                                                            <div class="col-xs-8 col-sm-6 col-md-6 col-lg-6 no-padding-left-right">
                                                                <div class="f-border">
                                                                    <div class="f-time">
                                                                        <span>
                                                                            @{
                                                                                try { }
                                                                                catch (Exception e)
                                                                                { var msg = e.ToString(); }

                                                                            }
                                                                            @OriginDTstr1 - @DestATstr2
                                                                        </span>
                                                                        @if (OriginDT1.Date != DestAT2.Date)
                                                                        {
                                                                            <sup>+1</sup>
                                                                        }
                                                                    </div>
                                                                    <div class="f-t-details">
                                                                        @onwardflight[0].Airline.AirlineName
                                                                    </div>
                                                                </div>
                                                                <div class="f-border-mobile">
                                                                    <div class="f-time">
                                                                        <span>
                                                                            @{
                                                                                DateTime RetOriginDT1 = DateTime.ParseExact(returnflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                                                DateTime RetDestAT2 = DateTime.ParseExact(returnflight[stop1 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                            }
                                                                            @RetOriginDT1.ToString("h:mm tt") - @RetDestAT2.ToString("h:mm tt")
                                                                        </span>
                                                                        @if (RetOriginDT1.Date != RetDestAT2.Date)
                                                                        {
                                                                            <sup>+1</sup>
                                                                        }
                                                                    </div>
                                                                    <div class="f-t-details">
                                                                        @try
                                                                        {
                                                                            <span>@returnflight[0].Airline.AirlineName</span>
                                                                        }
                                                                        catch (Exception ex)
                                                                        {
                                                                            var msg = ex.ToString();
                                                                        }

                                                                    </div>
                                                                </div>

                                                            </div>
                                                            <div class="col-xs-4 col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                                                <div class="f-border">
                                                                    <div class="f-time">
                                                                        <span>
                                                                            @{
                                                                                TimeSpan travelTimeOnward = DestAT2.Subtract(OriginDT1);
                                                                                TimeSpan travelTimeReturn = RetDestAT2.Subtract(RetOriginDT1);
                                                                                string travelTimeStringOnward = string.Empty;
                                                                                string travelTimeStringReturn = string.Empty;

                                                                                if (travelTimeOnward.Days != 0)
                                                                                {
                                                                                    travelTimeStringOnward = travelTimeOnward.Days.ToString() + " Day ";
                                                                                }
                                                                                if (travelTimeOnward.Hours != 0)
                                                                                {
                                                                                    travelTimeStringOnward = travelTimeStringOnward + (travelTimeOnward.Hours % 24).ToString() + " Hr ";
                                                                                }
                                                                                if (travelTimeOnward.Minutes != 0)
                                                                                {
                                                                                    travelTimeStringOnward = travelTimeStringOnward + (travelTimeOnward.Minutes % 60).ToString() + " Min ";
                                                                                }
                                                                                if (travelTimeReturn.Days != 0)
                                                                                {
                                                                                    travelTimeStringReturn = travelTimeReturn.Days.ToString() + " Day ";
                                                                                }
                                                                                if (travelTimeReturn.Hours != 0)
                                                                                {
                                                                                    travelTimeStringReturn = travelTimeStringReturn + (travelTimeReturn.Hours % 24).ToString() + " Hr ";
                                                                                }
                                                                                if (travelTimeReturn.Minutes != 0)
                                                                                {
                                                                                    travelTimeStringReturn = travelTimeStringReturn + (travelTimeReturn.Minutes % 60).ToString() + " Min ";
                                                                                }
                                                                                //var interval1 = DestAT2 - OriginDT1;
                                                                                //var int1 = interval1.ToString("h'h 'mm'm'");
                                                                                //var interval2 = RetDestAT2 - RetOriginDT1;
                                                                                //var int2 = interval2.ToString("h'h 'mm'm'");
                                                                            }
                                                                            @travelTimeStringOnward
                                                                        </span>
                                                                    </div>
                                                                    <div class="f-t-details">
                                                                        <span> @onwardflight[0].Origin.Airport.AirportCode - @onwardflight[onwardflight.Length - 1].Destination.Airport.AirportCode</span>
                                                                    </div>
                                                                </div>
                                                                <div class="f-border-mobile">
                                                                    <div class="f-time">@travelTimeStringReturn</div>
                                                                    <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @travelTimeStringReturn" />
                                                                    <div class="f-t-details">
                                                                        <span> @returnflight[0].Origin.Airport.AirportCode - @returnflight[returnflight.Length - 1].Destination.Airport.AirportCode</span>

                                                                    </div>
                                                                </div>
                                                                <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @travelTimeStringOnward" />
                                                                <input type="hidden" class="flight-detail-time-return" value="@Model.Response.Destination - @Model.Response.Origin  @travelTimeStringReturn" />
                                                            </div>
                                                            <div class="hidden-xs col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                                                <div class="f-border f-stop">
                                                                    @if (onwardflight.Length == 1)
                                                                    {
                                                                        <span>Non-Stop</span>
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>@(onwardflight.Length - 1) Stop </span>
                                                                    }
                                                                    @*<div class="f-time">


                                                                        </div>*@
                                                                    <div class="f-t-details">
                                                                        @{ try
                                                                            {
                                                                                var dateString5 = onwardflight[0].Destination.ArrTime;
                                                                                dateString5 = dateString5.Replace("T", " ");
                                                                                var Acode = onwardflight[0].Destination.Airport.AirportCode;
                                                                                DateTime DestAT1 = DateTime.ParseExact(dateString5, format, null);
                                                                                if ((onwardflight.Length - 1) > 0)
                                                                                {
                                                                                    var dateString6 = onwardflight[onwardflight.Length - 1].Origin.DepTime;
                                                                                    dateString6 = dateString6.Replace("T", " ");
                                                                                    var OriginDT2 = DateTime.ParseExact(dateString6, format, null);
                                                                                    TimeSpan c1 = OriginDT2.Subtract(DestAT1);
                                                                                    string d1 = string.Empty;
                                                                                    if (c1.Days != 0)
                                                                                    {
                                                                                        d1 = c1.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (c1.Hours != 0)
                                                                                    {
                                                                                        d1 = d1 + (c1.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (c1.Minutes != 0)
                                                                                    {
                                                                                        d1 = d1 + (c1.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                    <span>@d1 @Acode</span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>-</span>
                                                                                }
                                                                            }
                                                                            catch (Exception ex)
                                                                            {
                                                                                var msg = ex.Message;
                                                                            }

                                                                        }
                                                                    </div>
                                                                </div>
                                                                <div>
                                                                    <div class="f-time">
                                                                        @if (returnflight.Length == 1)
                                                                        {
                                                                            <span>Non-Stop </span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span>@(returnflight.Length - 1) Stop </span>
                                                                        }
                                                                    </div>
                                                                    <div class="f-t-details">
                                                                        @{
                                                                            try
                                                                            {
                                                                                var Bcode = returnflight[0].Destination.Airport.AirportCode;
                                                                                var dateString7 = returnflight[0].Destination.ArrTime;
                                                                                dateString7 = dateString7.Replace("T", " ");
                                                                                var RetDestAT1 = DateTime.ParseExact(dateString7, format, null);
                                                                                if (returnflight.Length - 1 > 0)
                                                                                {
                                                                                    var dateString8 = returnflight[returnflight.Length - 1].Origin.DepTime;
                                                                                    dateString8 = dateString8.Replace("T", " ");
                                                                                    var RetOriginDT2 = DateTime.ParseExact(dateString8, format, null);
                                                                                    TimeSpan c2 = RetOriginDT2.Subtract(RetDestAT1);
                                                                                    string d2 = string.Empty;
                                                                                    if (c2.Days != 0)
                                                                                    {
                                                                                        d2 = c2.Days.ToString() + " Day ";
                                                                                    }
                                                                                    if (c2.Hours != 0)
                                                                                    {
                                                                                        d2 = d2 + (c2.Hours % 24).ToString() + " Hr ";
                                                                                    }
                                                                                    if (c2.Minutes != 0)
                                                                                    {
                                                                                        d2 = d2 + (c2.Minutes % 60).ToString() + " Min ";
                                                                                    }
                                                                                    <span>@d2 @Bcode</span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>-</span>
                                                                                }
                                                                            }
                                                                            catch (Exception ex)
                                                                            {
                                                                                var msg = ex.Message;
                                                                            }

                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2 col-md-2 col-lg-2 journey-amount no-left-padd">
                                                        <div id="" class="hidden display1 result_view_@identifier">
                                                            <div class="amt"><span>₹</span>@text </div> <div class="per-person">per person</div>
                                                        </div>
                                                        <div id="" class="display2 show_@identifier">
                                                            <div class="t-info"><span>₹</span>@text</div><div class="per-person">per person</div><br><br>
                                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                                            {
                                                                <div class="t-detail t-info hidden-xs">REFUNDABLE </div>
                                                            }
                                                            else
                                                            {
                                                                <div class="t-detail t-info hidden-xs">NON-REFUNDABLE </div>
                                                            }
                                                            <div class="t-detail t-info hidden-xs">
                                                                @{
                                                                    int minBaggageQuant = 0;
                                                                }
                                                                @if (Model.Response.Results[0][i].Segments[0].Any(x => string.IsNullOrEmpty(x.Baggage.Trim())))
                                                                {
                                                                    @*<span>NO CHECK IN BAGGAGE</span>*@
                                                                }
                                                                else
                                                                {
                                                                    List<string> segmentBaggages = Model.Response.Results[0][i].Segments[0].Select(x => x.Baggage).ToList();
                                                                    thisBaggage = 0;
                                                                    foreach (var baggageItem in segmentBaggages)
                                                                    {
                                                                        if (int.TryParse(baggageItem.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                        {
                                                                            if (thisBaggage != 0)
                                                                            {
                                                                                minBaggageQuant = thisBaggage;
                                                                            }
                                                                        }
                                                                    }
                                                                    if (minBaggageQuant == 0)
                                                                    {
                                                                        @*<span>
                                                                                NO CHECK IN BAGGAGE
                                                                            </span>*@
                                                                    }
                                                                    else
                                                                    {
                                                                        <span>
                                                                            @Model.Response.Results[0][i].Segments[0].Where(x => x.Baggage.Contains(minBaggageQuant.ToString())).Select(x => x.Baggage).FirstOrDefault()
                                                                            CHECK IN
                                                                        </span>
                                                                    }

                                                                }
                                                            </div>
                                                            @*<div class="t-detail t-info hidden-xs">
                                                                    MEALS INCLUDED
                                                                </div>*@
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-6 col-sm-2 col-md-2 col-lg-2 sel-btn">
                                                        <div class="flight-info hidden">

                                                        </div>
                                                        @*data-destination="@returnflight[returnflight.Length - 1].Destination.Airport.AirportCode"*@
                                                        <button type="button"
                                                                data-length="1"
                                                                data-flightindex="@Model.Response.Results[0][i].ResultIndex"
                                                                data-lcc="@Model.Response.Results[0][i].IsLCC"
                                                                data-traceid="@Model.Response.TraceId"
                                                                data-tokenid="@Model.Response.TokenId"
                                                                data-origin="@onwardflight[0].Origin.Airport.AirportCode"
                                                                data-destination="@Model.Response.Destination"
                                                                data-price="@amt"
                                                                class="select-flight-btn select-btn">
                                                            Select
                                                        </button>
                                                        <div id="" class="showless result_view_@identifier display1 hidden show-moreless" data-target=".show_@identifier" data-toggle-target=".result_view_@identifier">
                                                            <a>Show Less <img src="~/images/Chevron_Up.svg" alt="Chevron-Up"></a>
                                                        </div>
                                                        <div id=""
                                                             data-rules-fetched="false"
                                                             data-target-identifier="@identifier"
                                                             data-length="1"
                                                             data-flightindex="@Model.Response.Results[0][i].ResultIndex"
                                                             data-lcc="@Model.Response.Results[0][i].IsLCC"
                                                             data-traceid="@Model.Response.TraceId"
                                                             data-tokenid="@Model.Response.TokenId"
                                                             class="showmore show_@identifier display2 show-moreless"
                                                             data-target=".result_view_@identifier"
                                                             data-toggle-target=".show_@identifier">
                                                            <a>Show More <img src="~/images/Chevron_Down.svg" alt="Chevron-Up"></a>

                                                        </div>
                                                    </div>

                                                </div>
                                                <div id="" class="display1 result_view_@identifier hidden result-details row">
                                                    <div>
                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                        <div class="tab col-xs-11 col-sm-11 col-md-11 col-lg-11 result-header-top">
                                                            <button type="button" class="tabbutton result-header" onclick="openit(event, 'onward_@identifier',this)">ONWARD JOURNEY</button>
                                                            <button type="button" class="tabbutton result-header " onclick="openit(event, 'return_@identifier',this)">return JOURNEY</button>
                                                            <button type="button" class="tabbutton result-header " onclick="openit(event, 'baggage_@identifier',this)">baggage information</button>
                                                            <button type="button" class="tabbutton result-header " onclick="openit(event, 'cancel_@identifier',this)">cancellation policy</button>
                                                        </div>
                                                        <div id="onward_@identifier" class="tabcontent onwards">
                                                            <div class="result-info row">
                                                                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                    <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                </div>
                                                                <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                    <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col text-uppercase no-padding-left-right">
                                                                        <div class="s-name">
                                                                            @OriginDT1.ToString("h:mm tt")
                                                                            <span class="separator"></span>
                                                                            @onwardflight[0].Origin.Airport.AirportName (@onwardflight[0].Origin.Airport.AirportCode)
                                                                        </div>
                                                                        <div class="s-info">
                                                                            TRAVEL TIME:
                                                                            @{
                                                                                var originTime = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                                                var arrivalTime = DateTime.ParseExact(onwardflight[0].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                TimeSpan it3 = arrivalTime.Subtract(originTime);
                                                                                string it4 = string.Empty;
                                                                                if (it3.Days != 0)
                                                                                {
                                                                                    it4 = it3.Days.ToString() + " Day ";
                                                                                }
                                                                                if (it3.Hours != 0)
                                                                                {
                                                                                    it4 = it4 + (it3.Hours % 24).ToString() + " Hr ";
                                                                                }
                                                                                if (it3.Minutes != 0)
                                                                                {
                                                                                    it4 = it4 + (it3.Minutes % 60).ToString() + " Min ";
                                                                                }
                                                                            }
                                                                            @it4
                                                                        </div>
                                                                        <div class="s-name">
                                                                            @arrivalTime.ToString("h:mm tt")
                                                                            <span class="separator"></span>
                                                                            @onwardflight[0].Destination.Airport.AirportName (@onwardflight[0].Destination.Airport.AirportCode)
                                                                        </div>
                                                                        <div class="s-info">
                                                                            @onwardflight[0].Airline.AirlineName
                                                                            <span class="separator"></span>
                                                                            @onwardflight[0].Airline.AirlineCode
                                                                            <span class="separator"></span>
                                                                            @onwardflight[0].Airline.FlightNumber
                                                                        </div>

                                                                        <input type="hidden" class="flight-first-leg" value="@onwardflight[0].Airline.AirlineName - @onwardflight[0].Airline.AirlineCode - @onwardflight[0].Airline.FlightNumber / Travel Time: @it4">
                                                                    </div>
                                                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right">
                                                                        @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                        {<div class="s-details">REFUNDABLE</div>}
                                                                        else
                                                                        {<div class="s-details">NON-REFUNDABLE</div>}
                                                                        @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                        <div class="s-details">
                                                                            @{
                                                                                thisBaggage = 0;
                                                                            }
                                                                            @if (string.IsNullOrEmpty(onwardflight[0].Baggage) || int.TryParse(onwardflight[0].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                            {
                                                                                if (thisBaggage == 0)
                                                                                {
                                                                                    @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @onwardflight[0].Baggage
                                                                                        CHECK - IN BAGGAGE
                                                                                    </span>
                                                                                }

                                                                            }
                                                                            else
                                                                            {
                                                                                <span>
                                                                                    @onwardflight[0].Baggage
                                                                                    CHECK - IN BAGGAGE
                                                                                </span>
                                                                            }
                                                                            @{
                                                                                thisBaggage = 0;
                                                                            }

                                                                        </div>
                                                                        <div class="s-details">
                                                                            @if (string.IsNullOrEmpty(onwardflight[0].CabinBaggage) || int.TryParse(onwardflight[0].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                            {
                                                                                if (thisBaggage == 0)
                                                                                {
                                                                                    @*<span>NO CABIN BAGGAGE</span>*@
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @onwardflight[0].CabinBaggage
                                                                                        CABIN BAGGAGE
                                                                                    </span>
                                                                                }

                                                                            }
                                                                            else
                                                                            {
                                                                                <span>
                                                                                    @onwardflight[0].CabinBaggage
                                                                                    CABIN BAGGAGE
                                                                                </span>
                                                                            }
                                                                        </div>
                                                                        @*<div class="s-details">ON-DEMAND VIDEO</div>*@
                                                                    </div>
                                                                </div>
                                                                @{
                                                                    for (int k = 0; k < stop2 - 1; ++k)
                                                                    {
                                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 stop-over no-padding-left-right">
                                                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                                            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                <div class="s-middle">
                                                                                    @{
                                                                                        DateTime OriginDT2 = DateTime.ParseExact(onwardflight[k + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                                        DateTime nDestAT2 = DateTime.ParseExact(onwardflight[k + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                        DateTime nDestAT1 = DateTime.ParseExact(onwardflight[k].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                        TimeSpan it5 = OriginDT2.Subtract(nDestAT1);
                                                                                        string it6 = string.Empty;
                                                                                        if (it5.Days != 0)
                                                                                        {
                                                                                            it6 = it5.Days.ToString() + " Day ";
                                                                                        }
                                                                                        if (it5.Hours != 0)
                                                                                        {
                                                                                            it6 = it6 + (it5.Hours % 24).ToString() + " Hr ";
                                                                                        }
                                                                                        if (it5.Minutes != 0)
                                                                                        {
                                                                                            it6 = it6 + (it5.Minutes % 60).ToString() + " Min";
                                                                                        }
                                                                                        TimeSpan it1 = nDestAT2.Subtract(OriginDT2);
                                                                                        string it2 = string.Empty;
                                                                                        if (it1.Days != 0)
                                                                                        {
                                                                                            it2 = it1.Days.ToString() + " Day ";
                                                                                        }
                                                                                        if (it1.Hours != 0)
                                                                                        {
                                                                                            it2 = it2 + (it1.Hours % 24).ToString() + " Hr ";
                                                                                        }
                                                                                        if (it1.Minutes != 0)
                                                                                        {
                                                                                            it2 = it2 + (it1.Minutes % 60).ToString() + " Min";
                                                                                        }
                                                                                    }
                                                                                    @it6
                                                                                    <input type="hidden" class="stop-over-time" value="@it6 Stopover at @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)" />
                                                                                    <input type="hidden" class="stop-over-trip" value="@onwardflight[k + 1].Airline.AirlineName - @onwardflight[k + 1].Airline.AirlineCode - @onwardflight[k + 1].Airline.FlightNumber / Travel Time: @it2" />
                                                                                    STOPOVER
                                                                                    <span class="separator"></span>
                                                                                    <span class="text-uppercase">
                                                                                        @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)
                                                                                    </span>
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                            <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                        </div>
                                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 rest-flight no-padding-left-right">
                                                                            <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                                                <div class="s-name">
                                                                                    @OriginDT2.ToString("h:mm tt")
                                                                                    @if (nDestAT1.Date != OriginDT2.Date)
                                                                                    {<span>(+1 Day)</span>}
                                                                                    <span class="separator"></span>
                                                                                    @onwardflight[k + 1].Origin.Airport.AirportName (@onwardflight[k + 1].Origin.Airport.AirportCode)
                                                                                </div>
                                                                                <div class="s-info">TRAVEL TIME: @it2</div>
                                                                                <div class="s-name">
                                                                                    @nDestAT2.ToString("h:mm tt")
                                                                                    <span class="separator"></span>
                                                                                    @onwardflight[k + 1].Destination.Airport.AirportName (@onwardflight[k + 1].Destination.Airport.AirportCode)
                                                                                </div>
                                                                                <div class="s-info">
                                                                                    @onwardflight[k + 1].Airline.AirlineName
                                                                                    <span class="separator"></span>
                                                                                    @onwardflight[k + 1].Airline.AirlineCode
                                                                                    <span class="separator"></span>
                                                                                    @onwardflight[k + 1].Airline.FlightNumber
                                                                                </div>
                                                                                @*<input type="hidden" class="stop-over-time" value="@it6 Stopover at @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)" />
                                                                                    <input type="hidden" class="stop-over-trip" value="@onwardflight[k + 1].Airline.AirlineName - @onwardflight[k + 1].Airline.AirlineCode - @onwardflight[k + 1].Airline.FlightNumber / Travel Time: @it2" />*@

                                                                            </div>
                                                                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                                                @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                                {<div class="s-details">REFUNDABLE</div>}
                                                                                else
                                                                                {
                                                                                    <div class="s-details">NON-REFUNDABLE</div>
                                                                                }
                                                                                @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                                <div class="s-details">
                                                                                    @{
                                                                                        thisBaggage = 0;
                                                                                    }
                                                                                    @if (string.IsNullOrEmpty(onwardflight[k + 1].Baggage) || int.TryParse(onwardflight[k + 1].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                    {
                                                                                        if (thisBaggage == 0)
                                                                                        {
                                                                                            @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @onwardflight[k + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @onwardflight[k + 1].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }
                                                                                    @*@if (onwardflight[k + 1].Baggage == null)
                                                                                        {<span>0 CHECK - IN BAGGAGE</span>}
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @onwardflight[k + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }*@
                                                                                </div>
                                                                                <div class="s-details">
                                                                                    @{
                                                                                        thisBaggage = 0;
                                                                                    }
                                                                                    @if (string.IsNullOrEmpty(onwardflight[k + 1].CabinBaggage) || int.TryParse(onwardflight[k + 1].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                    {
                                                                                        if (thisBaggage == 0)
                                                                                        {
                                                                                            @*<span>NO CABIN BAGGAGE</span>*@
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @onwardflight[k + 1].CabinBaggage
                                                                                                CABIN BAGGAGE
                                                                                            </span>
                                                                                        }

                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @onwardflight[k + 1].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }
                                                                                    @*@if (onwardflight[k + 1].CabinBaggage == null)
                                                                                        {<span>0 CABIN BAGGAGE</span>}
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @onwardflight[k + 1].CabinBaggage
                                                                                                CABIN BAGGAGE
                                                                                            </span>
                                                                                        }*@
                                                                                </div>
                                                                                <div class="s-details"></div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                        <div id="return_@identifier" class="tabcontent return">
                                                            <div class="result-info row">
                                                                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                    <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                </div>
                                                                <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                    <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                                        <div class="s-name">
                                                                            @RetOriginDT1.ToString("h:mm tt")
                                                                            <span class="separator"></span>
                                                                            @returnflight[0].Origin.Airport.AirportName (@returnflight[0].Origin.Airport.AirportCode)
                                                                        </div>
                                                                        <div class="s-info">
                                                                            TRAVEL TIME:
                                                                            @{
                                                                                TimeSpan tt1 = DateTime.ParseExact(returnflight[returnflight.Length > 0 ? returnflight.Length - 1 : 0].Destination.ArrTime.Replace("T", " "), format, null).Subtract(DateTime.ParseExact(returnflight[returnflight.Length - 1].Origin.DepTime.Replace("T", " "), format, null));
                                                                                string tt1String = string.Empty;
                                                                                if (tt1.Days != 0)
                                                                                {
                                                                                    tt1String = tt1.Days.ToString() + " Day ";
                                                                                }
                                                                                if (tt1.Hours != 0)
                                                                                {
                                                                                    tt1String = tt1String + (tt1.Hours % 24).ToString() + " Hr ";
                                                                                }
                                                                                if (tt1.Minutes != 0)
                                                                                {
                                                                                    tt1String = tt1String + (tt1.Minutes % 60).ToString() + " Min";
                                                                                }
                                                                            }
                                                                            @tt1String
                                                                        </div>
                                                                        <div class="s-name">
                                                                            @DateTime.ParseExact(returnflight[returnflight.Length > 0 ? returnflight.Length - 1 : 0].Destination.ArrTime.Replace("T", " "), format, null).ToString("h:mm tt")
                                                                            <span class="separator"></span>
                                                                            @returnflight[0].Destination.Airport.AirportName (@returnflight[0].Destination.Airport.AirportCode)
                                                                        </div>
                                                                        <div class="s-info">
                                                                            @returnflight[0].Airline.AirlineName
                                                                            <span class="separator"></span>
                                                                            @returnflight[0].Airline.AirlineCode
                                                                            <span class="separator"></span>
                                                                            @returnflight[0].Airline.FlightNumber
                                                                        </div>
                                                                    </div>
                                                                    <input type="hidden" class="flight-first-leg-return" value="@returnflight[0].Airline.AirlineName - @returnflight[0].Airline.AirlineCode - @returnflight[0].Airline.FlightNumber / Travel Time: @tt1String">
                                                                    <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right">
                                                                        @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                        {<div class="s-details">REFUNDABLE</div>}
                                                                        else
                                                                        {<div class="s-details">NON-REFUNDABLE</div>}
                                                                        @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                        @{
                                                                            thisBaggage = 0;
                                                                        }

                                                                        <div class="s-details">
                                                                            @if (string.IsNullOrEmpty(returnflight[0].Baggage) || int.TryParse(returnflight[0].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                            {
                                                                                if (thisBaggage == 0)
                                                                                {
                                                                                    @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @returnflight[0].Baggage
                                                                                        CHECK - IN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>
                                                                                    @returnflight[0].Baggage
                                                                                    CHECK - IN BAGGAGE
                                                                                </span>
                                                                            }
                                                                        </div>
                                                                        <div class="s-details">
                                                                            @{
                                                                                thisBaggage = 0;
                                                                            }
                                                                            @if (string.IsNullOrEmpty(returnflight[0].CabinBaggage) || int.TryParse(returnflight[0].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                            {
                                                                                if (thisBaggage == 0)
                                                                                {
                                                                                    @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>
                                                                                        @returnflight[0].CabinBaggage
                                                                                        CABIN BAGGAGE
                                                                                    </span>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <span>
                                                                                    @returnflight[0].Baggage
                                                                                    CABIN BAGGAGE
                                                                                </span>
                                                                            }

                                                                        </div>
                                                                        @*<div class="s-details">ON-DEMAND VIDEO</div>*@
                                                                    </div>
                                                                </div>
                                                                @{
                                                                    for (int l = 0; l < stop1 - 1; ++l)
                                                                    {
                                                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 stop-over no-padding-left-right">
                                                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                                            <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                                <div class="s-middle">
                                                                                    @{
                                                                                        var RetOriginDT2 = DateTime.ParseExact(returnflight[l + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                                        var nRetDestAT1 = DateTime.ParseExact(returnflight[l].Destination.ArrTime.Replace("T", " "), format, null);
                                                                                        TimeSpan stopover = RetOriginDT2.Subtract(nRetDestAT1);
                                                                                        string stopoverString = string.Empty;
                                                                                        if (stopover.Days != 0)
                                                                                        {
                                                                                            stopoverString = stopover.Days.ToString() + " Day ";
                                                                                        }
                                                                                        if (stopover.Hours != 0)
                                                                                        {
                                                                                            stopoverString = stopoverString + (stopover.Hours % 24).ToString() + " Hr ";
                                                                                        }
                                                                                        if (stopover.Minutes != 0)
                                                                                        {
                                                                                            stopoverString = stopoverString + (stopover.Minutes % 60).ToString() + " Min";
                                                                                        }
                                                                                        var dateString9 = returnflight[l + 1].Destination.ArrTime;
                                                                                        dateString9 = dateString9.Replace("T", " ");
                                                                                        DateTime nRetDestAT2 = DateTime.ParseExact(dateString9, format, null);
                                                                                    }
                                                                                    @stopoverString STOPOVER
                                                                                    <span class="separator"></span>
                                                                                    @returnflight[l].Destination.Airport.CityName (@returnflight[l].Destination.Airport.AirportCode)

                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                                            <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                                        </div>
                                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                                            <div class="col-xs-8 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                                                <div class="s-name">
                                                                                    @RetOriginDT2.ToString("h:mm tt")
                                                                                    @if (nRetDestAT1.Date != RetOriginDT2.Date)
                                                                                    {<span>(+1 Day)</span>}
                                                                                    <span class="separator"></span>
                                                                                    @returnflight[l + 1].Origin.Airport.AirportName (@returnflight[l + 1].Origin.Airport.AirportCode)
                                                                                </div>
                                                                                <div class="s-info">
                                                                                    TRAVEL TIME:
                                                                                    @{
                                                                                        TimeSpan tt2 = nRetDestAT2.Subtract(RetOriginDT2);
                                                                                        string tt2String = string.Empty;
                                                                                        if (tt2.Days != 0)
                                                                                        {
                                                                                            tt2String = tt2.Days.ToString() + " Day ";
                                                                                        }
                                                                                        if (tt2.Hours != 0)
                                                                                        {
                                                                                            tt2String = tt2String + (tt2.Hours % 24).ToString() + " Hr ";
                                                                                        }
                                                                                        if (tt2.Minutes != 0)
                                                                                        {
                                                                                            tt2String = tt2String + (tt2.Minutes % 60).ToString() + " Min";
                                                                                        }
                                                                                    }
                                                                                    @tt2String
                                                                                </div>
                                                                                <div class="s-name">
                                                                                    @nRetDestAT2.ToString("h:mm tt")
                                                                                    <span class="separator"></span>
                                                                                    @returnflight[l + 1].Destination.Airport.AirportName (@returnflight[l + 1].Destination.Airport.AirportCode)
                                                                                </div>
                                                                                <div class="s-info">
                                                                                    @returnflight[l + 1].Airline.AirlineName
                                                                                    <span class="separator"></span>
                                                                                    @returnflight[l + 1].Airline.AirlineCode
                                                                                    <span class="separator"></span>
                                                                                    @returnflight[l + 1].Airline.FlightNumber
                                                                                </div>
                                                                                <input type="hidden" class="stop-over-time" value="@stopoverString Stopover at @returnflight[l].Destination.Airport.CityName (@returnflight[l].Destination.Airport.AirportCode)" />
                                                                                <input type="hidden" class="stop-over-trip" value="@returnflight[l].Airline.AirlineName - @returnflight[l].Airline.AirlineCode - @returnflight[l].Airline.FlightNumber / Travel Time: @tt2String" />
                                                                            </div>
                                                                            <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 s-col  no-padding-left-right">
                                                                                @if (Model.Response.Results[0][i].IsRefundable == true)
                                                                                {
                                                                                    <div class="s-details">REFUNDABLE</div>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <div class="s-details">NON - REFUNDABLE</div>
                                                                                }
                                                                                @*<div class="s-details">MEALS INCLUDED</div>*@
                                                                                <div class="s-details">
                                                                                    @{
                                                                                        thisBaggage = 0;
                                                                                    }
                                                                                    @if (string.IsNullOrEmpty(returnflight[l + 1].Baggage) || int.TryParse(returnflight[l + 1].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                    {
                                                                                        if (thisBaggage == 0)
                                                                                        {
                                                                                            @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @returnflight[l + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @returnflight[l + 1].Baggage
                                                                                            CHECK - IN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                </div>
                                                                                <div class="s-details">
                                                                                    @*@{
                                                                                            thisBaggage = 0;
                                                                                        }
                                                                                        @if (string.IsNullOrEmpty(returnflight[l + 1].Baggage) || int.TryParse(returnflight[l + 1].Baggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                        {
                                                                                            if (thisBaggage == 0)
                                                                                            {
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span>
                                                                                                    @returnflight[l + 1].Baggage
                                                                                                    CHECK - IN BAGGAGE
                                                                                                </span>
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @returnflight[l + 1].Baggage
                                                                                                CHECK - IN BAGGAGE
                                                                                            </span>
                                                                                        }*@
                                                                                    @{
                                                                                        thisBaggage = 0;
                                                                                    }
                                                                                    @if (string.IsNullOrEmpty(returnflight[l + 1].CabinBaggage) || int.TryParse(returnflight[l + 1].CabinBaggage.Split(' ').FirstOrDefault(), out thisBaggage))
                                                                                    {
                                                                                        if (thisBaggage == 0)
                                                                                        {
                                                                                            @*<span>NO CHECK - IN BAGGAGE</span>*@
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span>
                                                                                                @returnflight[l + 1].CabinBaggage
                                                                                                CABIN BAGGAGE
                                                                                            </span>
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <span>
                                                                                            @returnflight[l + 1].CabinBaggage
                                                                                            CABIN BAGGAGE
                                                                                        </span>
                                                                                    }

                                                                                </div>
                                                                                <div class="s-details"></div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                        <div id="baggage_@identifier" class="tabcontent baggage">
                                                        </div>
                                                        <div id="cancel_@identifier" class="tabcontent">
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-10">
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                }
            }
            <div class="show-more-button-div">
                @**@
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-5"></div>
                <div class="hidden-xs col-sm-4 col-md-4 col-lg-4"></div>
                <div class="load_more_btn col-xs-12 col-sm-4 col-md-4 col-lg-4">
                    <button type="button" class="button_load" data-viewcount="@countBox" onclick="CallMe()">LOAD MORE FLIGHTS</button>
                </div>
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> </div>
            </div>
        }
    }
    else
    {

        //Mobile view
        @if (Model.Response.Results.GetLength(0) == 2)
        {
            var countBox = 5;
            int j = 0;
            var num1 = Model.Response.Results[0].GetLength(0);
            var num2 = Model.Response.Results[1].GetLength(0);
            var num = num1 > num2 ? num2 : num1;


            for (int i = 0; i < num; i++)
            {
                var identifier = Guid.NewGuid();
                <div class="flight-result-single boxes_@i @(i >= countBox ? "hidden" : string.Empty)">
                    @if (i < countBox) { j++; }
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 flight-options-container">
                        <div class="select-flight-options">
                            <div class="flight-results row">
                                <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 no-padding-left-right">
                                    @{var onwardflight = Model.Response.Results[0][i].Segments[0];
                                        var onwardflightImage = onwardflight[0].Airline.AirlineCode + ".png";
                                        var returnflight = Model.Response.Results[1][i].Segments[0];
                                        var returnflightImage = returnflight[0].Airline.AirlineCode + ".png";}
                                    <div class="img-div"><img src="~/images/Airline/@onwardflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                    <div class="img-div"><img src="~/images/Airline/@returnflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                </div>

                                <div class="col-xs-10 col-sm-7 col-md-7 col-lg-7 mobile-left-right-padding">
                                    <div id="" class="hidden display1 result_view_@identifier">
                                        <div class="journey-details f-border">
                                            <span>
                                                Onward Journey
                                                <span class="separator"></span>
                                                @{ string format = "yyyy-MM-dd HH:mm:ss";
                                                    DateTime ds1 = DateTime.ParseExact(Model.Response.Results[0][0].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                }
                                                @ds1.ToString("dd MMMM, yyyy")
                                            </span>
                                        </div>
                                        <div class="journey-details">
                                            <span>
                                                Return Journey<span class="separator"></span>
                                                @{
                                                    DateTime ds2 = DateTime.ParseExact(Model.Response.Results[1][0].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                }
                                                @ds2.ToString("dd MMMM, yyyy")
                                            </span>
                                        </div>
                                    </div>
                                    <div id="" class="display2 show_@identifier">
                                        <div class="col-xs-8 col-sm-6 col-md-6 col-lg-6 no-padding-left-right">
                                            <div class="f-border">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            try { }
                                                            catch (Exception e)
                                                            { var msg = e.ToString(); }
                                                            var stop2 = Model.Response.Results[1][i].Segments[0].Length;
                                                            var stop1 = Model.Response.Results[0][i].Segments[0].Length;
                                                            AirResultSegments[] returnSegment = Model.Response.Results[1][i].Segments[0];
                                                            AirResultSegments[] onwardsSegment = Model.Response.Results[0][i].Segments[0];
                                                            DateTime OriginDT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                            DateTime DestAT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][stop1 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                            var OriginDTstr1 = OriginDT1.ToString("h:mm tt");
                                                            var DestATstr2 = DestAT2.ToString("h:mm tt");
                                                        }
                                                        @OriginDTstr1 - @DestATstr2
                                                    </span>
                                                    @if (OriginDT1.Date != DestAT2.Date)
                                                    {
                                                        <sup>+1</sup>
                                                    }
                                                </div>
                                                <div class="f-t-details">
                                                    @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName
                                                </div>
                                            </div>
                                            <div class="f-border-mobile">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            DateTime RetOriginDT1 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                            DateTime RetDestAT2 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][stop2 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                        }
                                                        @RetOriginDT1.ToString("h:mm tt") - @RetDestAT2.ToString("h:mm tt")
                                                    </span>
                                                    @if (RetOriginDT1.Date != RetDestAT2.Date)
                                                    {
                                                        <sup>+1</sup>
                                                    }
                                                </div>
                                                <div class="f-t-details">
                                                    @try
                                                    {
                                                        <span>@Model.Response.Results[1][i].Segments[0][0].Airline.AirlineName</span>}
                                                    catch (Exception ex)
                                                    { var msg = ex.ToString(); }
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xs-4 col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                            <div class="f-border">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            TimeSpan interval1 = DestAT2.Subtract(OriginDT1);
                                                            string int1 = string.Empty;
                                                            if (interval1.Days != 0)
                                                            {
                                                                int1 = interval1.Days.ToString() + " Day ";
                                                            }
                                                            if (interval1.Hours != 0)
                                                            {
                                                                int1 = int1 + (interval1.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (interval1.Minutes != 0)
                                                            {
                                                                int1 = int1 + (interval1.Minutes % 60).ToString() + " Min ";
                                                            }
                                                            TimeSpan interval2 = RetDestAT2.Subtract(RetOriginDT1);
                                                            //string int2 = interval2.ToString("h'h 'mm'm'");
                                                            string int2 = string.Empty;
                                                            if (interval2.Days != 0)
                                                            {
                                                                int2 = interval2.Days.ToString() + " Day ";
                                                            }
                                                            if (interval2.Hours != 0)
                                                            {
                                                                int2 = int2 + (interval2.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (interval2.Minutes != 0)
                                                            {
                                                                int2 = int2 + (interval2.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @int1
                                                    </span>
                                                </div>
                                                <div class="f-t-details">
                                                    @for (int a = 0; a < stop1 - 1; ++a)
                                                    {
                                                        <span> @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[0][i].Segments[0][a + 1].Destination.Airport.AirportCode</span>
                                                    }
                                                    @if (stop1 == 1)
                                                    {<span> @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportCode</span>
                                                }
                                                </div>
                                            </div>
                                            <div>
                                                <div class="f-time">@int2</div>
                                                <div class="f-t-details">
                                                    @for (int a = 0; a < stop2 - 1; ++a)
                                                    {<span> @Model.Response.Results[1][i].Segments[0][a].Origin.Airport.AirportCode - @Model.Response.Results[1][i].Segments[0][a + 1].Destination.Airport.AirportCode</span>
                                                }
                                                    @if (stop2 == 1)
                                                    {<span> @Model.Response.Results[1][i].Segments[0][0].Origin.Airport.AirportCode - @Model.Response.Results[1][i].Segments[0][0].Destination.Airport.AirportCode</span>
                                                }
                                                </div>
                                                <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @int1" />
                                                <input type="hidden" class="flight-detail-time-return" value="@Model.Response.Destination - @Model.Response.Origin  @int2" />
                                            </div>
                                        </div>
                                        <div class="hidden-xs col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                            <div class="f-border f-stop">
                                                @{
                                                    var stp = stop2 - 1;
                                                    @if (stp == 0)
                                                    {
                                                        <span>Non-Stop</span>
                                                    }
                                                    else
                                                    {
                                                        <span>@stp Stop </span>
                                                    }
                                                }
                                                <div class="f-t-details">
                                                    @{

                                                        DateTime DestAT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Destination.ArrTime.Replace("T", " "), format, null);
                                                        if (stp > 0)
                                                        {
                                                            string Acode = string.Empty;

                                                            TimeSpan totalStopOverTimeOnwards = TimeSpan.Zero;

                                                            for (int s = 0; s < onwardsSegment.Length - 1; s++)
                                                            {
                                                                Acode = s == 0 ? onwardsSegment[s].Destination.Airport.AirportCode : Acode + ", " + onwardsSegment[s].Destination.Airport.AirportCode;
                                                                totalStopOverTimeOnwards = totalStopOverTimeOnwards + DateTime.ParseExact(onwardsSegment[s + 1].Origin.DepTime.Replace("T", " "), format, null).Subtract(DateTime.ParseExact(onwardsSegment[s].Destination.ArrTime.Replace("T", " "), format, null));
                                                            }
                                                            DateTime OriginDT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);
                                                            string d1 = string.Empty;
                                                            if (totalStopOverTimeOnwards.Days != 0)
                                                            {
                                                                d1 = totalStopOverTimeOnwards.Days.ToString() + " Day ";
                                                            }
                                                            if (totalStopOverTimeOnwards.Hours != 0)
                                                            {
                                                                d1 = d1 + (totalStopOverTimeOnwards.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (totalStopOverTimeOnwards.Minutes != 0)
                                                            {
                                                                d1 = d1 + (totalStopOverTimeOnwards.Minutes % 60).ToString() + " Min ";
                                                            }
                                                            <span>@d1 @Acode</span>
                                                        }
                                                        else
                                                        {
                                                            <span>-</span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                            <div class="f-ret-stop">
                                                @{
                                                    var stp2 = stop1 - 1;
                                                    @if (stp2 == 0)
                                                    {
                                                        <span>Non-Stop</span>
                                                    }
                                                    else
                                                    {
                                                        <span>@stp2 Stop </span>
                                                    }
                                                }

                                                <div class="f-t-details">
                                                    @{

                                                        DateTime RetDestAT1 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][0].Destination.ArrTime.Replace("T", " "), format, null);
                                                        if (stp2 > 0)
                                                        {
                                                            string Bcode = string.Empty;
                                                            TimeSpan totalStopOverTimeReturn = TimeSpan.Zero;
                                                            for (int s = 0; s < returnSegment.Length - 1; s++)
                                                            {
                                                                Bcode = s == 0 ? returnSegment[s].Destination.Airport.AirportCode : Bcode + ", " + returnSegment[s].Destination.Airport.AirportCode;
                                                                totalStopOverTimeReturn = totalStopOverTimeReturn + DateTime.ParseExact(returnSegment[s + 1].Origin.DepTime.Replace("T", " "), format, null).Subtract(DateTime.ParseExact(returnSegment[s].Destination.ArrTime.Replace("T", " "), format, null));
                                                            }
                                                            DateTime RetOriginDT2 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][0].Origin.DepTime.Replace("T", " "), format, null);

                                                            var d2 = string.Empty;
                                                            if (totalStopOverTimeReturn.Days != 0)
                                                            {
                                                                d2 = totalStopOverTimeReturn.Days.ToString() + " Day ";
                                                            }
                                                            if (totalStopOverTimeReturn.Hours != 0)
                                                            {
                                                                d2 = d2 + (totalStopOverTimeReturn.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (totalStopOverTimeReturn.Minutes != 0)
                                                            {
                                                                d2 = d2 + (totalStopOverTimeReturn.Minutes % 60).ToString() + " Min ";
                                                            }
                                                            <span>@d2 @Bcode</span>
                                                        }
                                                        else
                                                        {
                                                            <span>-</span>
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="flight-detail-bottom-container">
                                    <div class="col-xs-7 col-sm-2 col-md-2 col-lg-2 journey-amount no-left-padd">
                                        <div id="" class="hidden display1 result_view_@identifier">
                                            @{
                                                decimal amt = Model.Response.Results[0][i].Fare.PublishedFare + Model.Response.Results[1][i].Fare.PublishedFare;

                                                decimal perPersonAmount = amt / Model.Response.TotalPassengers;
                                                CultureInfo hindi = new CultureInfo("hi-IN");
                                                string text = string.Format(hindi, "{0:N0}", perPersonAmount);
                                            }
                                            <div class="amt"><span>₹</span>@text </div> <div class="per-person">per person</div>
                                        </div>
                                        <div id="" class="display2 show_@identifier">
                                            <div class="t-info"><span>₹</span>@text</div><div class="per-person"><span class="show-filter-detail-mobile">Show More<img src="~/images/Chevron_Down.svg" alt="Chevron-down"></span>per person</div><br><br>
                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                            {<div class="t-detail t-info">REFUNDABLE </div>}
                                            else
                                            { <div class="t-detail t-info">NON-REFUNDABLE </div>}
                                            <div class="t-detail t-info">
                                                @if (Model.Response.Results[0][i].Segments[0][0].Baggage == null)
                                                {<span>NO BAGGAGE</span>}
                                                else
                                                {
                                                    <span>
                                                        @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                        BAGGAGE
                                                    </span>
                                                }
                                            </div>
                                            <div class="t-detail t-info"> MEALS INCLUDED</div>
                                        </div>
                                    </div>
                                    <div class="col-xs-5 col-sm-2 col-md-2 col-lg-2 sel-btn">
                                        <button type="button"
                                                data-length="2"
                                                data-flightindex="@Model.Response.Results[0][i].ResultIndex,@Model.Response.Results[1][i].ResultIndex"
                                                data-lcc="@Model.Response.Results[0][i].IsLCC,@Model.Response.Results[1][i].IsLCC"
                                                data-traceid="@Model.Response.TraceId"
                                                data-tokenid="@Model.Response.TokenId"
                                                data-origin="@onwardflight[0].Origin.Airport.AirportCode"
                                                data-destination="@returnflight[returnflight.Length - 1].Destination.Airport.AirportCode"
                                                data-price="@amt"
                                                class="select-flight-btn select-btn">
                                            SELECT
                                        </button>
                                        @*<div id="" class="showless result_view_@identifier display1 hidden show-moreless" data-target=".show_@identifier" data-toggle-target=".result_view_@identifier">
                                                <a>Show Less <img src="~/images/Chevron_Up.svg" alt="Chevron-Up"></a>
                                            </div>
                                            <div id="" class="showmore show_@identifier display2 show-moreless hidden-xs" data-target=".result_view_@identifier" data-toggle-target=".show_@identifier">
                                                <a>Show More <img src="~/images/Chevron_Down.svg" alt="Chevron-Up"></a>

                                            </div>*@
                                    </div>
                                </div>

                            </div>
                            <div id="" class="display1 result_view_@identifier hidden result-details row">
                                <div class="tab-wrapper">
                                    <div class="hidden-xs col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                    <div class="tab col-xs-12 col-sm-11 col-md-11 col-lg-11 result-header-top">
                                        <button type="button" class="tabbutton result-header" onclick="openit(event, 'onward_@identifier',this)">ONWARD JOURNEY</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'return_@identifier',this)">return JOURNEY</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'baggage_@identifier',this)">baggage information</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'cancel_@identifier',this)">cancellation policy</button>
                                    </div>

                                    @*<div class="paddles">
                                            <a class="left-paddle paddle hidden">
                                                <img src="~/images/Chevron_left_pink.svg" alt="left_arrow"/>
                                            </a>
                                            <a class="right-paddle paddle">
                                                <img src="~/images/Chevron_Right_Pink.svg" alt="right_arrow" />
                                            </a>
                                        </div>*@

                                    <div id="onward_@identifier" class="tabcontent onwards">
                                        <div class="result-info row">
                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                            </div>
                                            <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                    <div class="s-name">
                                                        @OriginDT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][0].Origin.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        TRAVEL TIME:
                                                        @{
                                                            TimeSpan it3 = DestAT1.Subtract(OriginDT1);
                                                            string it4 = string.Empty;
                                                            if (it3.Days != 0)
                                                            {
                                                                it4 = it3.Days.ToString() + " Day ";
                                                            }
                                                            if (it3.Hours != 0)
                                                            {
                                                                it4 = it4 + (it3.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (it3.Minutes != 0)
                                                            {
                                                                it4 = it4 + (it3.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @it4
                                                    </div>
                                                    <div class="s-name">
                                                        @DestAT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][0].Destination.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineCode
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[0][i].Segments[0][0].Airline.FlightNumber
                                                    </div>
                                                    <input type="hidden" class="flight-first-leg" value="@Model.Response.Results[0][i].Segments[0][0].Airline.AirlineName - @Model.Response.Results[0][i].Segments[0][0].Airline.AirlineCode - @Model.Response.Results[0][i].Segments[0][0].Airline.FlightNumber / Travel Time: @it4">
                                                </div>
                                                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right">
                                                    @if (Model.Response.Results[0][i].IsRefundable == true)
                                                    {<div class="s-details">REFUNDABLE</div>}
                                                    else
                                                    {<div class="s-details">NON-REFUNDABLE</div>}
                                                    <div class="s-details">MEALS INCLUDED</div>
                                                    <div class="s-details">
                                                        @if (Model.Response.Results[0][i].Segments[0][0].Baggage == null)
                                                        {<span>0 CHECK - IN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                                CHECK - IN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">
                                                        @if (Model.Response.Results[0][i].Segments[0][0].CabinBaggage == null)
                                                        {<span>0 CABIN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @Model.Response.Results[0][i].Segments[0][0].CabinBaggage
                                                                CABIN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">ON-DEMAND VIDEO</div>
                                                </div>
                                            </div>
                                            @{
                                                for (int k = 0; k < stop1 - 1; ++k)
                                                {
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding-left-right">
                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                            <div class="s-middle">
                                                                @{
                                                                    DateTime OriginDT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                    DateTime nDestAT2 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                    DateTime nDestAT1 = DateTime.ParseExact(Model.Response.Results[0][i].Segments[0][k].Destination.ArrTime.Replace("T", " "), format, null);
                                                                    TimeSpan it5 = OriginDT2.Subtract(nDestAT1);
                                                                    string it6 = string.Empty;
                                                                    if (it5.Days != 0)
                                                                    {
                                                                        it6 = it5.Days.ToString() + " Day ";
                                                                    }
                                                                    if (it5.Hours != 0)
                                                                    {
                                                                        it6 = it6 + (it5.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (it5.Minutes != 0)
                                                                    {
                                                                        it6 = it6 + (it5.Minutes % 60).ToString() + " Min ";
                                                                    }
                                                                    TimeSpan it1 = nDestAT2 - OriginDT2;
                                                                    string it2 = string.Empty;
                                                                    if (it1.Days != 0)
                                                                    {
                                                                        it2 = it1.Days.ToString() + " Day ";
                                                                    }
                                                                    if (it1.Hours != 0)
                                                                    {
                                                                        it2 = it2 + (it1.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (it1.Minutes != 0)
                                                                    {
                                                                        it2 = it2 + (it1.Minutes % 60).ToString() + " Min ";
                                                                    }
                                                                }
                                                                @it6
                                                                STOPOVER
                                                                <span class="separator"></span>
                                                                <span class="text-uppercase">
                                                                    @Model.Response.Results[0][i].Segments[0][k].Destination.Airport.CityName (@Model.Response.Results[0][i].Segments[0][k].Destination.Airport.AirportCode)
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                    </div>
                                                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                            <div class="s-name">
                                                                @OriginDT2.ToString("h:mm tt")
                                                                @if (nDestAT1.Date != OriginDT2.Date)
                                                                {<span>(+1 Day)</span>}
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Origin.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][k + 1].Origin.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">TRAVEL TIME: @it2</div>
                                                            <div class="s-name">
                                                                @nDestAT2.ToString("h:mm tt")
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Destination.Airport.AirportName (@Model.Response.Results[0][i].Segments[0][k + 1].Destination.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineName
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineCode
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[0][i].Segments[0][k + 1].Airline.FlightNumber
                                                            </div>
                                                        </div>
                                                        <input type="hidden" class="stop-over-time" value="@it6 Stopover at @Model.Response.Results[0][i].Segments[0][k].Destination.Airport.CityName (@Model.Response.Results[0][i].Segments[0][k].Destination.Airport.AirportCode)" />
                                                        <input type="hidden" class="stop-over-trip" value="@Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineName - @Model.Response.Results[0][i].Segments[0][k + 1].Airline.AirlineCode - @Model.Response.Results[0][i].Segments[0][k + 1].Airline.FlightNumber / Travel Time: @it2" />

                                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                                            {<div class="s-details">REFUNDABLE</div>}
                                                            else
                                                            {
                                                                <div class="s-details">NON-REFUNDABLE</div>
                                                            }
                                                            <div class="s-details">MEALS INCLUDED</div>
                                                            <div class="s-details">
                                                                @if (Model.Response.Results[0][i].Segments[0][k + 1].Baggage == null)
                                                                {<span>0 CHECK - IN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].Baggage
                                                                        CHECK - IN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details">
                                                                @if (Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage == null)
                                                                {<span>0 CABIN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @Model.Response.Results[0][i].Segments[0][k + 1].CabinBaggage
                                                                        CABIN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details"></div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div id="return_@identifier" class="tabcontent return">
                                        <div class="result-info row">
                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                            </div>
                                            <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                    <div class="s-name">
                                                        @RetOriginDT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[1][i].Segments[0][0].Origin.Airport.AirportName (@Model.Response.Results[1][i].Segments[0][0].Origin.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        TRAVEL TIME:
                                                        @{
                                                            TimeSpan tt1 = RetDestAT1.Subtract(RetOriginDT1);
                                                            string travelStyleString = string.Empty;
                                                            if (tt1.Days != 0)
                                                            {
                                                                travelStyleString = tt1.Days.ToString() + " Day ";
                                                            }
                                                            if (tt1.Hours != 0)
                                                            {
                                                                travelStyleString = travelStyleString + (tt1.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (tt1.Minutes != 0)
                                                            {
                                                                travelStyleString = travelStyleString + (tt1.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @travelStyleString
                                                    </div>
                                                    <div class="s-name">
                                                        @RetDestAT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[1][i].Segments[0][0].Destination.Airport.AirportName (@Model.Response.Results[1][i].Segments[0][0].Destination.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        @Model.Response.Results[1][i].Segments[0][0].Airline.AirlineName
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[1][i].Segments[0][0].Airline.AirlineCode
                                                        <span class="separator"></span>
                                                        @Model.Response.Results[1][i].Segments[0][0].Airline.FlightNumber
                                                    </div>
                                                    <input type="hidden" class="flight-first-leg-return" value="@Model.Response.Results[1][i].Segments[0][0].Airline.AirlineName - @Model.Response.Results[1][i].Segments[0][0].Airline.AirlineCode - @Model.Response.Results[1][i].Segments[0][0].Airline.FlightNumber / Travel Time: @travelStyleString">
                                                </div>
                                                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                    @if (Model.Response.Results[1][i].IsRefundable == true)
                                                    {<div class="s-details">REFUNDABLE</div>}
                                                    else
                                                    {<div class="s-details">NON-REFUNDABLE</div>}
                                                    <div class="s-details">MEALS INCLUDED</div>
                                                    <div class="s-details">
                                                        @if (Model.Response.Results[1][i].Segments[0][0].Baggage == null)
                                                        {<span>0 CHECK - IN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @Model.Response.Results[1][i].Segments[0][0].Baggage
                                                                CHECK - IN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">
                                                        @if (Model.Response.Results[1][i].Segments[0][0].CabinBaggage == null)
                                                        {<span>0 CABIN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @Model.Response.Results[1][i].Segments[0][0].CabinBaggage
                                                                CABIN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">ON-DEMAND VIDEO</div>
                                                </div>
                                            </div>
                                            @{
                                                for (int l = 0; l < stop2 - 1; ++l)
                                                {
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding-left-right">
                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                            <div class="s-middle">
                                                                @{
                                                                    DateTime RetOriginDT2 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][l + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                    DateTime nRetDestAT1 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][l].Destination.ArrTime.Replace("T", " "), format, null);

                                                                    TimeSpan stopover = RetOriginDT2.Subtract(nRetDestAT1);
                                                                    string stopOverString = string.Empty;
                                                                    if (stopover.Days != 0)
                                                                    {
                                                                        stopOverString = stopover.Days.ToString() + " Day ";
                                                                    }
                                                                    if (stopover.Hours != 0)
                                                                    {
                                                                        stopOverString = stopOverString + (stopover.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (stopover.Minutes != 0)
                                                                    {
                                                                        stopOverString = stopOverString + (stopover.Minutes % 60).ToString() + " Min ";
                                                                    }
                                                                    DateTime nRetDestAT2 = DateTime.ParseExact(Model.Response.Results[1][i].Segments[0][l + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                }
                                                                @stopOverString STOPOVER
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[1][i].Segments[0][l].Destination.Airport.CityName (@Model.Response.Results[1][i].Segments[0][l].Destination.Airport.AirportCode)
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                    </div>
                                                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                            <div class="s-name">
                                                                @RetOriginDT2.ToString("h:mm tt")
                                                                @if (nRetDestAT1.Date != RetOriginDT2.Date)
                                                                {<span>(+1 Day)</span>}
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[1][i].Segments[0][l + 1].Origin.Airport.AirportName (@Model.Response.Results[1][i].Segments[0][l + 1].Origin.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                TRAVEL TIME:
                                                                @{
                                                                    TimeSpan tt2 = nRetDestAT2.Subtract(RetOriginDT2);
                                                                    string travelStopOverString = string.Empty;
                                                                    if (tt2.Days != 0)
                                                                    {
                                                                        travelStopOverString = tt2.Days.ToString() + " Day ";
                                                                    }
                                                                    if (tt2.Hours != 0)
                                                                    {
                                                                        travelStopOverString = travelStopOverString + (tt2.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (tt2.Minutes != 0)
                                                                    {
                                                                        travelStopOverString = travelStopOverString + (tt2.Minutes % 60).ToString() + " Min ";
                                                                    }
                                                                }
                                                                @travelStopOverString
                                                            </div>
                                                            <div class="s-name">
                                                                @nRetDestAT2.ToString("h:mm tt")
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[1][i].Segments[0][l + 1].Destination.Airport.AirportName (@Model.Response.Results[1][i].Segments[0][l + 1].Destination.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                @Model.Response.Results[1][i].Segments[0][l + 1].Airline.AirlineName
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[1][i].Segments[0][l + 1].Airline.AirlineCode
                                                                <span class="separator"></span>
                                                                @Model.Response.Results[1][i].Segments[0][l + 1].Airline.FlightNumber
                                                            </div>
                                                            <input type="hidden" class="stop-over-time" value="@stopOverString @Model.Response.Results[1][i].Segments[0][l].Destination.Airport.CityName (@Model.Response.Results[1][i].Segments[0][l].Destination.Airport.AirportCode)" />
                                                            <input type="hidden" class="stop-over-trip" value="@Model.Response.Results[1][i].Segments[0][l + 1].Airline.AirlineName - @Model.Response.Results[1][i].Segments[0][l + 1].Airline.AirlineCode - @Model.Response.Results[1][i].Segments[0][l + 1].Airline.FlightNumber / Travel Time: @travelStopOverString" />
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                            @if (Model.Response.Results[1][i].IsRefundable == true)
                                                            {<div class="s-details">REFUNDABLE</div>}
                                                            else
                                                            {
                                                                <div class="s-details">REFUNDABLE</div>
                                                            }
                                                            <div class="s-details">MEALS INCLUDED</div>
                                                            <div class="s-details">
                                                                @if (Model.Response.Results[1][i].Segments[0][l + 1].Baggage == null)
                                                                {<span>0 CHECK - IN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @Model.Response.Results[1][i].Segments[0][l + 1].Baggage
                                                                        CHECK - IN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details">
                                                                @if (Model.Response.Results[1][i].Segments[0][l + 1].CabinBaggage == null)
                                                                {<span>0 CABIN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @Model.Response.Results[1][i].Segments[0][l + 1].CabinBaggage
                                                                        CABIN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details"></div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div id="baggage_@identifier" class="tabcontent">
                                    </div>
                                    <div id="cancel_@identifier" class="tabcontent">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-12 hidden-sm hidden-md hidden-lg flight-detail-mobile">

                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-10">
                    </div>
                </div>
            }
            <div class="show-more-button-div">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-5"></div>
                <div class="hidden-xs col-sm-4 col-md-4 col-lg-4"></div>
                <div class="load_more_btn col-xs-4 col-sm-4 col-md-4 col-lg-4">
                    <button type="button" class="button_load" data-viewcount="@countBox" onclick="CallMe(@countBox,@num, this)">LOAD MORE FLIGHTS</button>
                </div>
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> </div>
            </div>
        }
        if (Model.Response.Results.GetLength(0) == 1)
        {
            var countBox = 5;
            var j = 0;
            var num = Model.Response.Results[0].GetLength(0);
            for (int i = 0; i < num; i++)
            {
                var identifier = Guid.NewGuid();
                <div class="flight-result-single boxes_@i @(i >= countBox ? "hidden" : string.Empty)">
                    @if (i < countBox) { j++; }
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 flight-options-container">
                        <div class="select-flight-options">
                            <div class="flight-results row">
                                <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 no-padding-left-right">
                                    @{
                                        AirResultSegments[] onwardflight = Model.Response.Results[0][i].Segments[0];
                                        var onwardflightImage = onwardflight[0].Airline.AirlineCode + ".png";
                                        AirResultSegments[] returnflight = Model.Response.Results[0][i].Segments[Model.Response.Results[0][i].Segments.Length - 1];
                                        var returnflightImage = returnflight[0].Airline.AirlineCode + ".png";
                                    }
                                    <div class="img-div"><img src="~/images/Airline/@onwardflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                    <div class="img-div"><img src="~/images/Airline/@returnflightImage" alt="Flight Emblem" class=" flight-img"></div>
                                </div>
                                <div class="col-xs-10 col-sm-7 col-md-7 col-lg-7 mobile-left-right-padding">
                                    <div id="" class="hidden display1 result_view_@identifier">
                                        <div class="journey-details f-border">
                                            <span>
                                                Onward Journey
                                                <span class="separator"></span>
                                                @{
                                                    string format = "yyyy-MM-dd HH:mm:ss";
                                                    DateTime ds1 = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                }
                                                @ds1.ToString("dd MMMM, yyyy")
                                            </span>
                                        </div>
                                        <div class="journey-details">
                                            <span>
                                                Return Journey<span class="separator"></span>
                                                @{
                                                    DateTime ds2 = DateTime.ParseExact(returnflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                }
                                                @ds2.ToString("dd MMMM, yyyy")
                                            </span>
                                        </div>
                                    </div>
                                    <div id="" class="display2 show_@identifier">
                                        <div class="col-xs-8 col-sm-6 col-md-6 col-lg-6 no-padding-left-right">
                                            <div class="f-border">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            try { }
                                                            catch (Exception e)
                                                            { var msg = e.ToString(); }
                                                            var stop2 = onwardflight.Length;
                                                            var stop1 = returnflight.Length;
                                                            DateTime OriginDT1 = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null);

                                                            DateTime DestAT2 = DateTime.ParseExact(onwardflight[stop2 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                            var OriginDTstr1 = OriginDT1.ToString("h:mm tt");
                                                            var DestATstr2 = DestAT2.ToString("h:mm tt");
                                                        }
                                                        @OriginDTstr1 - @DestATstr2
                                                    </span>
                                                    @if (OriginDT1.Date != DestAT2.Date)
                                                    {
                                                        <sup>+1</sup>
                                                    }
                                                </div>
                                                <div class="f-t-details">
                                                    @onwardflight[0].Airline.AirlineName
                                                </div>
                                            </div>
                                            <div class="f-border-mobile">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            DateTime RetOriginDT1 = DateTime.ParseExact(returnflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                            DateTime RetDestAT2 = DateTime.ParseExact(returnflight[stop1 - 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                        }
                                                        @RetOriginDT1.ToString("h:mm tt") - @RetDestAT2.ToString("h:mm tt")
                                                    </span>
                                                    @if (RetOriginDT1.Date != RetDestAT2.Date)
                                                    {
                                                        <sup>+1</sup>
                                                    }
                                                </div>
                                                <div class="f-t-details">
                                                    @try
                                                    {
                                                        <span>@returnflight[0].Airline.AirlineName</span>
                                                    }
                                                    catch (Exception ex)
                                                    {
                                                        var msg = ex.ToString();
                                                    }

                                                </div>
                                            </div>

                                        </div>
                                        <div class="col-xs-4 col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                            <div class="f-border">
                                                <div class="f-time">
                                                    <span>
                                                        @{
                                                            TimeSpan interval1 = DestAT2.Subtract(OriginDT1);
                                                            string int1 = string.Empty;
                                                            if (interval1.Days != 0)
                                                            {
                                                                int1 = interval1.Days.ToString() + " Day ";
                                                            }
                                                            if (interval1.Hours != 0)
                                                            {
                                                                int1 = int1 + (interval1.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (interval1.Minutes != 0)
                                                            {
                                                                int1 = int1 + (interval1.Minutes % 60).ToString() + " Min ";
                                                            }
                                                            TimeSpan interval2 = RetDestAT2.Subtract(RetOriginDT1);
                                                            //string int2 = interval2.ToString("h'h 'mm'm'");
                                                            string int2 = string.Empty;
                                                            if (interval2.Days != 0)
                                                            {
                                                                int2 = interval2.Days.ToString() + " Day ";
                                                            }
                                                            if (interval2.Hours != 0)
                                                            {
                                                                int2 = int2 + (interval2.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (interval2.Minutes != 0)
                                                            {
                                                                int2 = int2 + (interval2.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @int1
                                                    </span>
                                                </div>
                                                <div class="f-t-details">
                                                    <span> @onwardflight[0].Origin.Airport.AirportCode - @onwardflight[onwardflight.Length - 1].Destination.Airport.AirportCode</span>
                                                </div>
                                            </div>
                                            <div class="f-border-mobile">
                                                <div class="f-time">@int2</div>
                                                <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @int2" />
                                                <div class="f-t-details">
                                                    <span> @returnflight[0].Origin.Airport.AirportCode - @returnflight[returnflight.Length - 1].Destination.Airport.AirportCode</span>

                                                </div>
                                            </div>
                                            <input type="hidden" class="flight-detail-time" value="@Model.Response.Origin - @Model.Response.Destination  @int1" />
                                            <input type="hidden" class="flight-detail-time-return" value="@Model.Response.Destination - @Model.Response.Origin  @int2" />
                                        </div>
                                        <div class="hidden-xs col-sm-3 col-md-3 col-lg-3 no-padding-left-right">
                                            <div class="f-border f-stop">
                                                @if (onwardflight.Length == 1)
                                                {
                                                    <span>Non-Stop</span>
                                                }
                                                else
                                                {
                                                    <span>@(onwardflight.Length - 1) Stop </span>
                                                }
                                                @*<div class="f-time">


                                                    </div>*@
                                                <div class="f-t-details">
                                                    @{ try
                                                        {
                                                            var Acode = onwardflight[0].Destination.Airport.AirportCode;
                                                            DateTime DestAT1 = DateTime.ParseExact(onwardflight[0].Destination.ArrTime.Replace("T", " "), format, null);
                                                            if ((onwardflight.Length - 1) > 0)
                                                            {
                                                                DateTime OriginDT2 = DateTime.ParseExact(onwardflight[onwardflight.Length - 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                TimeSpan c1 = DestAT1.Subtract(OriginDT2);
                                                                string d1 = string.Empty;
                                                                if (c1.Days != 0)
                                                                {
                                                                    d1 = c1.Days.ToString() + " Day ";
                                                                }
                                                                if (c1.Hours != 0)
                                                                {
                                                                    d1 = d1 + (c1.Hours % 24).ToString() + " Hr ";
                                                                }
                                                                if (c1.Minutes != 0)
                                                                {
                                                                    d1 = d1 + (c1.Minutes % 60).ToString() + " Min ";
                                                                }

                                                                <span>@d1 @Acode</span>
                                                            }
                                                            else
                                                            {
                                                                <span>-</span>
                                                            }
                                                        }
                                                        catch (Exception ex)
                                                        {
                                                            var msg = ex.Message;
                                                        }

                                                    }
                                                </div>
                                            </div>
                                            <div>
                                                <div class="f-time">
                                                    @if (returnflight.Length == 1)
                                                    {
                                                        <span>Non-Stop </span>
                                                    }
                                                    else
                                                    {
                                                        <span>@(returnflight.Length - 1) Stop </span>
                                                    }
                                                </div>
                                                <div class="f-t-details">
                                                    @{
                                                        try
                                                        {
                                                            var Bcode = returnflight[0].Destination.Airport.AirportCode;
                                                            DateTime RetDestAT1 = DateTime.ParseExact(returnflight[0].Destination.ArrTime.Replace("T", " "), format, null);
                                                            if (returnflight.Length - 1 > 0)
                                                            {
                                                                DateTime RetOriginDT2 = DateTime.ParseExact(returnflight[returnflight.Length - 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                TimeSpan c2 = RetOriginDT2.Subtract(RetDestAT1);
                                                                string d2 = string.Empty;
                                                                if (c2.Days != 0)
                                                                {
                                                                    d2 = c2.Days.ToString() + " Day ";
                                                                }
                                                                if (c2.Hours != 0)
                                                                {
                                                                    d2 = d2 + (c2.Hours % 24).ToString() + " Hr ";
                                                                }
                                                                if (c2.Minutes != 0)
                                                                {
                                                                    d2 = d2 + (c2.Minutes % 60).ToString() + " Min ";
                                                                }

                                                                <span>@d2 @Bcode</span>
                                                            }
                                                            else
                                                            {
                                                                <span>-</span>
                                                            }
                                                        }
                                                        catch (Exception ex)
                                                        {
                                                            var msg = ex.Message;
                                                        }

                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="flight-detail-bottom-container">
                                    <div class="col-xs-7 col-sm-2 col-md-2 col-lg-2 journey-amount no-left-padd">
                                        <div id="" class="hidden display1 result_view_@identifier">
                                            @{
                                                decimal amt = Model.Response.Results[0][i].Fare.PublishedFare;
                                                decimal perPersonAmount = amt / Model.Response.TotalPassengers;
                                                CultureInfo hindi = new CultureInfo("hi-IN");
                                                string text = string.Format(hindi, "{0:N0}", perPersonAmount);
                                            }
                                            <div class="amt"><span>₹</span>@text </div> <div class="per-person">per person</div>
                                        </div>
                                        <div id="" class="display2 show_@identifier">
                                            <div class="t-info"><span>₹</span>@text</div><div class="per-person"><span class="show-filter-detail-mobile">Show More<img src="~/images/Chevron_Down.svg" alt="Chevron-down"></span>per person</div><br><br>
                                            @*@if (Model.Response.Results[0][i].IsRefundable == true)
                                                {
                                                    <div class="t-detail t-info hidden-xs">REFUNDABLE </div>
                                                }
                                                else
                                                { <div class="t-detail t-info hidden-xs">NON-REFUNDABLE </div>}
                                                <div class="t-detail t-info hidden-xs">
                                                    @if (Model.Response.Results[0][i].Segments[0][0].Baggage == null)
                                                    {
                                                        <span>NO BAGGAGE</span>
                                                    }
                                                    else
                                                    {
                                                        <span>
                                                            @Model.Response.Results[0][i].Segments[0][0].Baggage
                                                            BAGGAGE
                                                        </span>
                                                    }
                                                </div>
                                                <div class="t-detail t-info hidden-xs">
                                                    MEALS INCLUDED
                                                </div>*@
                                        </div>
                                    </div>
                                    <div class="col-xs-5 col-sm-2 col-md-2 col-lg-2 sel-btn">
                                        <div class="flight-info hidden">

                                        </div>
                                        @*data-destination="@returnflight[returnflight.Length - 1].Destination.Airport.AirportCode"*@
                                        <button type="button"
                                                data-length="1"
                                                data-flightindex="@Model.Response.Results[0][i].ResultIndex"
                                                data-lcc="@Model.Response.Results[0][i].IsLCC"
                                                data-traceid="@Model.Response.TraceId"
                                                data-tokenid="@Model.Response.TokenId"
                                                data-origin="@onwardflight[0].Origin.Airport.AirportCode"
                                                data-destination="@Model.Response.Destination"
                                                data-price="@amt"
                                                class="select-flight-btn select-btn">
                                            Select
                                        </button>
                                        @*<div id="" class="showless result_view_@identifier display1 hidden show-moreless" data-target=".show_@identifier" data-toggle-target=".result_view_@identifier">
                                                <a>Show Less <img src="~/images/Chevron_Up.svg" alt="Chevron-Up"></a>
                                            </div>
                                            <div id="" class="showmore show_@identifier display2 show-moreless hidden-xs" data-target=".result_view_@identifier" data-toggle-target=".show_@identifier">
                                                <a>Show More <img src="~/images/Chevron_Down.svg" alt="Chevron-Up"></a>

                                            </div>*@
                                    </div>
                                </div>



                            </div>
                            <div id="" class="display1 result_view_@identifier hidden result-details row">
                                <div class="tab-wrapper">
                                    <div class="hidden-xs col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                    <div class="tab col-xs-12 col-sm-11 col-md-11 col-lg-11 result-header-top">
                                        <button type="button" class="tabbutton result-header" onclick="openit(event, 'onward_@identifier',this)">ONWARD JOURNEY</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'return_@identifier',this)">return JOURNEY</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'baggage_@identifier',this)">baggage information</button>
                                        <button type="button" class="tabbutton result-header " onclick="openit(event, 'cancel_@identifier',this)">cancellation policy</button>
                                    </div>

                                    @*<div class="paddles">
                                            <a class="left-paddle paddle hidden">
                                                <img src="~/images/Chevron_left_pink.svg" alt="left_arrow" />
                                            </a>
                                            <a class="right-paddle paddle">
                                                <img src="~/images/Chevron_Right_Pink.svg" alt="right_arrow" />
                                            </a>
                                        </div>*@
                                    <div id="onward_@identifier" class="tabcontent onwards">
                                        <div class="result-info row">
                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                            </div>
                                            <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                    <div class="s-name">
                                                        @OriginDT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @onwardflight[0].Origin.Airport.AirportName (@onwardflight[0].Origin.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        TRAVEL TIME:
                                                        @{
                                                            DateTime originTime = DateTime.ParseExact(onwardflight[0].Origin.DepTime.Replace("T", " "), format, null);
                                                            DateTime arrivalTime = DateTime.ParseExact(onwardflight[onwardflight.Length > 0 ? onwardflight.Length - 1 : 0].Destination.ArrTime.Replace("T", " "), format, null);
                                                            TimeSpan it3 = arrivalTime.Subtract(originTime);
                                                            string it4 = string.Empty;
                                                            if (it3.Days != 0)
                                                            {
                                                                it4 = it3.Days.ToString() + " Day ";
                                                            }
                                                            if (it3.Hours != 0)
                                                            {
                                                                it4 = it4 + (it3.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (it3.Minutes != 0)
                                                            {
                                                                it4 = it4 + (it3.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @it4
                                                    </div>
                                                    <div class="s-name">
                                                        @arrivalTime.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @onwardflight[0].Destination.Airport.AirportName (@onwardflight[0].Destination.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        @onwardflight[0].Airline.AirlineName
                                                        <span class="separator"></span>
                                                        @onwardflight[0].Airline.AirlineCode
                                                        <span class="separator"></span>
                                                        @onwardflight[0].Airline.FlightNumber
                                                    </div>

                                                    <input type="hidden" class="flight-first-leg" value="@onwardflight[0].Airline.AirlineName - @onwardflight[0].Airline.AirlineCode - @onwardflight[0].Airline.FlightNumber / Travel Time: @it4">
                                                </div>
                                                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right">
                                                    @if (Model.Response.Results[0][i].IsRefundable == true)
                                                    {<div class="s-details">REFUNDABLE</div>}
                                                    else
                                                    {<div class="s-details">NON-REFUNDABLE</div>}
                                                    <div class="s-details">MEALS INCLUDED</div>
                                                    <div class="s-details">
                                                        @if (onwardflight[0].Baggage == null)
                                                        {<span>0 CHECK - IN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @onwardflight[0].Baggage
                                                                CHECK - IN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">
                                                        @if (onwardflight[0].CabinBaggage == null)
                                                        {<span>0 CABIN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @onwardflight[0].CabinBaggage
                                                                CABIN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">ON-DEMAND VIDEO</div>
                                                </div>
                                            </div>
                                            @{
                                                for (int k = 0; k < stop2 - 1; ++k)
                                                {
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 stop-over no-padding-left-right">
                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                            <div class="s-middle">
                                                                @{
                                                                    DateTime OriginDT2 = DateTime.ParseExact(onwardflight[k + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                    DateTime nDestAT2 = DateTime.ParseExact(onwardflight[k + 1].Destination.ArrTime.Replace("T", " "), format, null);

                                                                    DateTime nDestAT1 = DateTime.ParseExact(onwardflight[k].Destination.ArrTime.Replace("T", " "), format, null);
                                                                    TimeSpan it5 = OriginDT2 - nDestAT1;
                                                                    string it6 = string.Empty;
                                                                    if (it5.Days != 0)
                                                                    {
                                                                        it6 = it5.Days.ToString() + " Day ";
                                                                    }
                                                                    if (it5.Hours != 0)
                                                                    {
                                                                        it6 = it6 + (it5.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (it5.Minutes != 0)
                                                                    {
                                                                        it6 = it6 + (it5.Minutes % 60).ToString() + " Min ";
                                                                    }

                                                                    TimeSpan it1 = nDestAT2.Subtract(OriginDT2);
                                                                    string it2 = string.Empty;
                                                                    if (it1.Days != 0)
                                                                    {
                                                                        it2 = it1.Days.ToString() + " Day ";
                                                                    }
                                                                    if (it1.Hours != 0)
                                                                    {
                                                                        it2 = it2 + (it1.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (it1.Minutes != 0)
                                                                    {
                                                                        it2 = it2 + (it1.Minutes % 60).ToString() + " Min ";
                                                                    }
                                                                }
                                                                @it6
                                                                <input type="hidden" class="stop-over-time" value="@it6 Stopover at @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)" />
                                                                <input type="hidden" class="stop-over-trip" value="@onwardflight[k + 1].Airline.AirlineName - @onwardflight[k + 1].Airline.AirlineCode - @onwardflight[k + 1].Airline.FlightNumber / Travel Time: @it2" />
                                                                STOPOVER
                                                                <span class="separator"></span>
                                                                <span class="text-uppercase">
                                                                    @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                    </div>
                                                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 rest-flight no-padding-left-right">
                                                        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right text-uppercase">
                                                            <div class="s-name">
                                                                @OriginDT2.ToString("h:mm tt")
                                                                @if (nDestAT1.Date != OriginDT2.Date)
                                                                {<span>(+1 Day)</span>}
                                                                <span class="separator"></span>
                                                                @onwardflight[k + 1].Origin.Airport.AirportName (@onwardflight[k + 1].Origin.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">TRAVEL TIME: @it2</div>
                                                            <div class="s-name">
                                                                @nDestAT2.ToString("h:mm tt")
                                                                <span class="separator"></span>
                                                                @onwardflight[k + 1].Destination.Airport.AirportName (@onwardflight[k + 1].Destination.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                @onwardflight[k + 1].Airline.AirlineName
                                                                <span class="separator"></span>
                                                                @onwardflight[k + 1].Airline.AirlineCode
                                                                <span class="separator"></span>
                                                                @onwardflight[k + 1].Airline.FlightNumber
                                                            </div>
                                                            @*<input type="hidden" class="stop-over-time" value="@it6 Stopover at @onwardflight[k].Destination.Airport.CityName (@onwardflight[k].Destination.Airport.AirportCode)" />
                                                                <input type="hidden" class="stop-over-trip" value="@onwardflight[k + 1].Airline.AirlineName - @onwardflight[k + 1].Airline.AirlineCode - @onwardflight[k + 1].Airline.FlightNumber / Travel Time: @it2" />*@

                                                        </div>
                                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col  no-padding-left-right">
                                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                                            {<div class="s-details">REFUNDABLE</div>}
                                                            else
                                                            {
                                                                <div class="s-details">NON-REFUNDABLE</div>
                                                            }
                                                            <div class="s-details">MEALS INCLUDED</div>
                                                            <div class="s-details">
                                                                @if (onwardflight[k + 1].Baggage == null)
                                                                {<span>0 CHECK - IN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @onwardflight[k + 1].Baggage
                                                                        CHECK - IN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details">
                                                                @if (onwardflight[k + 1].CabinBaggage == null)
                                                                {<span>0 CABIN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @onwardflight[k + 1].CabinBaggage
                                                                        CABIN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details"></div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div id="return_@identifier" class="tabcontent return">
                                        <div class="result-info row">
                                            <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                            </div>
                                            <div class="s-border col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                    <div class="s-name">
                                                        @RetOriginDT1.ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @returnflight[0].Origin.Airport.AirportName (@returnflight[0].Origin.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        TRAVEL TIME:
                                                        @{
                                                            TimeSpan tt1 = DateTime.ParseExact(returnflight[returnflight.Length > 0 ? returnflight.Length - 1 : 0].Destination.ArrTime.Replace("T", " "), format, null) - DateTime.ParseExact(returnflight[returnflight.Length - 1].Origin.DepTime.Replace("T", " "), format, null);
                                                            string travelTimeString = string.Empty;
                                                            if (tt1.Days != 0)
                                                            {
                                                                travelTimeString = tt1.Days.ToString() + " Day ";
                                                            }
                                                            if (tt1.Hours != 0)
                                                            {
                                                                travelTimeString = travelTimeString + (tt1.Hours % 24).ToString() + " Hr ";
                                                            }
                                                            if (tt1.Minutes != 0)
                                                            {
                                                                travelTimeString = travelTimeString + (tt1.Minutes % 60).ToString() + " Min ";
                                                            }
                                                        }
                                                        @travelTimeString
                                                    </div>
                                                    <div class="s-name">
                                                        @DateTime.ParseExact(returnflight[returnflight.Length > 0 ? returnflight.Length - 1 : 0].Destination.ArrTime.Replace("T", " "), format, null).ToString("h:mm tt")
                                                        <span class="separator"></span>
                                                        @returnflight[0].Destination.Airport.AirportName (@returnflight[0].Destination.Airport.AirportCode)
                                                    </div>
                                                    <div class="s-info">
                                                        @returnflight[0].Airline.AirlineName
                                                        <span class="separator"></span>
                                                        @returnflight[0].Airline.AirlineCode
                                                        <span class="separator"></span>
                                                        @returnflight[0].Airline.FlightNumber
                                                    </div>
                                                </div>
                                                <input type="hidden" class="flight-first-leg-return" value="@returnflight[0].Airline.AirlineName - @returnflight[0].Airline.AirlineCode - @returnflight[0].Airline.FlightNumber / Travel Time: @travelTimeString">
                                                <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right">
                                                    @if (Model.Response.Results[0][i].IsRefundable == true)
                                                    {<div class="s-details">REFUNDABLE</div>}
                                                    else
                                                    {<div class="s-details">NON-REFUNDABLE</div>}
                                                    <div class="s-details">MEALS INCLUDED</div>
                                                    <div class="s-details">
                                                        @if (returnflight[0].Baggage == null)
                                                        {<span>0 CHECK - IN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @returnflight[0].Baggage
                                                                CHECK - IN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">
                                                        @if (returnflight[0].CabinBaggage == null)
                                                        {<span>0 CABIN BAGGAGE</span>}
                                                        else
                                                        {
                                                            <span>
                                                                @returnflight[0].CabinBaggage
                                                                CABIN BAGGAGE
                                                            </span>
                                                        }
                                                    </div>
                                                    <div class="s-details">ON-DEMAND VIDEO</div>
                                                </div>
                                            </div>
                                            @{
                                                for (int l = 0; l < stop1 - 1; ++l)
                                                {
                                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 stop-over no-padding-left-right">
                                                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 no-padding-left-right"></div>
                                                        <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                            <div class="s-middle">
                                                                @{
                                                                    DateTime RetOriginDT2 = DateTime.ParseExact(returnflight[l + 1].Origin.DepTime.Replace("T", " "), format, null);
                                                                    DateTime nRetDestAT1 = DateTime.ParseExact(returnflight[l].Origin.DepTime.Replace("T", " "), format, null);
                                                                    TimeSpan stopover = RetOriginDT2.Subtract(nRetDestAT1);
                                                                    string stopOverString = string.Empty;
                                                                    if (stopover.Days != 0)
                                                                    {
                                                                        stopOverString = stopover.Days.ToString() + " Day ";
                                                                    }
                                                                    if (stopover.Hours != 0)
                                                                    {
                                                                        stopOverString = stopOverString + (stopover.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (stopover.Minutes != 0)
                                                                    {
                                                                        stopOverString = stopOverString + (stopover.Minutes % 60).ToString() + " Min ";
                                                                    }

                                                                    DateTime nRetDestAT2 = DateTime.ParseExact(returnflight[l + 1].Destination.ArrTime.Replace("T", " "), format, null);
                                                                }
                                                                @stopOverString STOPOVER
                                                                <span class="separator"></span>
                                                                @returnflight[l].Destination.Airport.CityName (@returnflight[l].Destination.Airport.AirportCode)

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 s-img">
                                                        <img src="~/images/Source_Destination_Decorator.svg" alt="SD-Decorator">
                                                    </div>
                                                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11 no-padding-left-right">
                                                        <div class="col-xs-12 col-sm-8 col-md-8 col-lg-8 s-col no-padding-left-right">
                                                            <div class="s-name">
                                                                @RetOriginDT2.ToString("h:mm tt")
                                                                @if (nRetDestAT1.Date != RetOriginDT2.Date)
                                                                {<span>(+1 Day)</span>}
                                                                <span class="separator"></span>
                                                                @returnflight[l + 1].Origin.Airport.AirportName (@returnflight[l + 1].Origin.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                TRAVEL TIME:
                                                                @{
                                                                    string travelTimeReturnString = string.Empty;
                                                                    TimeSpan tt2 = nRetDestAT2.Subtract(RetOriginDT2);
                                                                    if (tt2.Days != 0)
                                                                    {
                                                                        travelTimeReturnString = tt2.Days.ToString() + " Day ";
                                                                    }
                                                                    if (tt2.Hours != 0)
                                                                    {
                                                                        travelTimeReturnString = travelTimeReturnString + (tt2.Hours % 24).ToString() + " Hr ";
                                                                    }
                                                                    if (tt2.Minutes != 0)
                                                                    {
                                                                        travelTimeReturnString = travelTimeReturnString + (tt2.Minutes % 60).ToString() + " Min ";
                                                                    }

                                                                }
                                                                @travelTimeReturnString
                                                            </div>
                                                            <div class="s-name">
                                                                @nRetDestAT2.ToString("h:mm tt")
                                                                <span class="separator"></span>
                                                                @returnflight[l + 1].Destination.Airport.AirportName (@returnflight[l + 1].Destination.Airport.AirportCode)
                                                            </div>
                                                            <div class="s-info">
                                                                @returnflight[l + 1].Airline.AirlineName
                                                                <span class="separator"></span>
                                                                @returnflight[l + 1].Airline.AirlineCode
                                                                <span class="separator"></span>
                                                                @returnflight[l + 1].Airline.FlightNumber
                                                            </div>
                                                            <input type="hidden" class="stop-over-time" value="@stopOverString Stopover at @returnflight[l].Destination.Airport.CityName (@returnflight[l].Destination.Airport.AirportCode)" />
                                                            <input type="hidden" class="stop-over-trip" value="@returnflight[l].Airline.AirlineName - @returnflight[l].Airline.AirlineCode - @returnflight[l].Airline.FlightNumber / Travel Time: @travelTimeReturnString" />
                                                        </div>
                                                        <div class="col-xs-12 col-sm-4 col-md-4 col-lg-4 s-col no-padding-left-right ">
                                                            @if (Model.Response.Results[0][i].IsRefundable == true)
                                                            {
                                                                <div class="s-details">REFUNDABLE</div>
                                                            }
                                                            else
                                                            {
                                                                <div class="s-details">NON - REFUNDABLE</div>
                                                            }
                                                            <div class="s-details">MEALS INCLUDED</div>
                                                            <div class="s-details">
                                                                @if (returnflight[l + 1].Baggage == null)
                                                                {<span>0 CHECK - IN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @returnflight[l + 1].Baggage
                                                                        CHECK - IN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details">
                                                                @if (returnflight[l + 1].CabinBaggage == null)
                                                                {<span>0 CABIN BAGGAGE</span>}
                                                                else
                                                                {
                                                                    <span>
                                                                        @returnflight[l + 1].CabinBaggage
                                                                        CABIN BAGGAGE
                                                                    </span>
                                                                }
                                                            </div>
                                                            <div class="s-details"></div>
                                                        </div>
                                                    </div>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div id="baggage_@identifier" class="tabcontent">
                                    </div>
                                    <div id="cancel_@identifier" class="tabcontent">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-10">
                    </div>
                </div>
            }
            <div class="show-more-button-div">
                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 height-5"></div>
                <div class="hidden-xs col-sm-4 col-md-4 col-lg-4"></div>
                <div class="load_more_btn col-xs-12 col-sm-4 col-md-4 col-lg-4">
                    <button type="button" class="button_load" data-viewcount="@countBox" onclick="CallMe(@countBox,@num, this)">LOAD MORE FLIGHTS</button>
                </div>
                <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"> </div>
            </div>
        }
    }
}

<script>
    //flight  Booking
    $('.showmore').click(function () {
        var _target = $(this).data('target');
        var _toggleTarget = $(this).data('toggle-target');
        var _closeall = $('.showless.active');
        if (_closeall.hasClass('active')) { _closeall.click(); }
        $(_target).removeClass('hidden').addClass('active');
        $(_toggleTarget).removeClass('active').addClass('hidden');
        var _cont = $(_target).find('.tabbutton.result-header').first();
        $(_cont).click();
    });
    $('.showless').click(function () {
        var _target = $(this).data('target');
        var _toggleTarget = $(this).data('toggle-target');
        $(_target).removeClass('hidden').addClass('active');
        $(_toggleTarget).removeClass('active').addClass('hidden');
    });

    $(".show-filter-detail-mobile").click(function (e) {
        var htmlOfFlight = $($(this).closest('.flight-result-single').first()).wrap('<p>').parent().html();
        $($(this).closest('.flight-result-single').first()).unwrap();
        var elementOffset = $($(this).closest('.flight-result-single').first().find('.flight-options-container').first()).offset().top - 60;
        $('.flightdetailclose').data('offset', elementOffset);
        $('.expended-flight-section .flight-expended-content').html(htmlOfFlight);

        $(".flight-expended-content .select-flight-options .hidden").addClass('display1_visible').removeClass('display1_hidden');
        $(".flight-expended-content .select-flight-options .active").addClass('display2_hidden').removeClass('display2_visible');
        $(".flight-expended-content .select-flight-options .result-details").addClass('display1_visible');
        $(".flight-expended-content .display2").addClass('display2_hidden').removeClass('display2_visible');
        $(".flight-expended-content .flight-options-container").css({ "padding-left": "0px", "padding-right": "0px" });
        $(".flight-expended-content .flight-detail-bottom-container").css({ "position": "fixed", "bottom": "0px", "left": "0px", "background-color": "white", "z-index": "7", "right": "0px", "border-top": "1px solid #e6e6e6" });
        $(".product-banner-xs-head").hide();
        $(".flight-expended-content .result-header-top button").first().click();
        $("html, body").animate({ scrollTop: 0 }, "fast");
        $(".flight-expended-content .select-flight-btn").data('click-source', $(this).closest('.flight-result-single').first().attr('class'));

        $('.expended-flight-section').removeClass('hidden');
        $(".travel-plan").hide();
    });
    $(".flightdetailclose").click(function (e) {
        $(".travel-plan").show();
        $(".product-banner-xs-head").show();
        $('.expended-flight-section').addClass('hidden');
        $('.expended-flight-section .flight-expended-content').html("");
        $("html, body").animate({ scrollTop: $(this).data('offset') }, "fast");
    });
    //Flight_Detail (Mobile View) start,    
</script>